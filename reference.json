{
  "VPCPolicyServiceActionMap": {
    "Amazon DynamoDB For VPC Policies": [
      "DescribeContinuousBackups",
      "DescribeBackup",
      "DescribeReservedCapacity",
      "DeleteBackup",
      "Query",
      "DeleteItem",
      "DescribeTable",
      "CreateTable",
      "BatchGetItem",
      "DeleteTable",
      "BatchWriteItem",
      "RestoreTableFromBackup",
      "DescribeLimits",
      "GetItem",
      "UpdateTable",
      "UpdateItem",
      "DescribeReservedCapacityOfferings",
      "ListTables",
      "Scan",
      "PutItem",
      "CreateBackup"
    ]
  },
  "conditionKeys": [
    "aws:CurrentTime",
    "aws:EpochTime",
    "aws:MultiFactorAuthAge",
    "aws:MultiFactorAuthPresent",
    "aws:PrincipalType",
    "aws:Referer",
    "aws:SecureTransport",
    "aws:SourceArn",
    "aws:SourceIp",
    "aws:SourceVpc",
    "aws:SourceVpce",
    "aws:TagKeys",
    "aws:TokenIssueTime",
    "aws:UserAgent",
    "aws:userid",
    "aws:username"
  ],
  "conditionOperators": [
    "ArnEquals",
    "ArnEqualsIfExists",
    "ArnLike",
    "ArnLikeIfExists",
    "ArnNotEquals",
    "ArnNotEqualsIfExists",
    "ArnNotLike",
    "ArnNotLikeIfExists",
    "BinaryEquals",
    "BinaryEqualsIfExists",
    "BinaryNotEquals",
    "BinaryNotEqualsIfExists",
    "Bool",
    "BoolIfExists",
    "DateEquals",
    "DateEqualsIfExists",
    "DateGreaterThan",
    "DateGreaterThanEquals",
    "DateGreaterThanEqualsIfExists",
    "DateGreaterThanIfExists",
    "DateLessThan",
    "DateLessThanEquals",
    "DateLessThanEqualsIfExists",
    "DateLessThanIfExists",
    "DateNotEquals",
    "DateNotEqualsIfExists",
    "IpAddress",
    "IpAddressIfExists",
    "NotIpAddress",
    "NotIpAddressIfExists",
    "Null",
    "NumericEquals",
    "NumericEqualsIfExists",
    "NumericGreaterThan",
    "NumericGreaterThanEquals",
    "NumericGreaterThanEqualsIfExists",
    "NumericGreaterThanIfExists",
    "NumericLessThan",
    "NumericLessThanEquals",
    "NumericLessThanEqualsIfExists",
    "NumericLessThanIfExists",
    "NumericNotEquals",
    "NumericNotEqualsIfExists",
    "StringEquals",
    "StringEqualsIfExists",
    "StringEqualsIgnoreCase",
    "StringEqualsIgnoreCaseIfExists",
    "StringLike",
    "StringLikeIfExists",
    "StringNotEquals",
    "StringNotEqualsIfExists",
    "StringNotEqualsIgnoreCase",
    "StringNotEqualsIgnoreCaseIfExists",
    "StringNotLike",
    "StringNotLikeIfExists"
  ],
  "policyTypes": {
    "IAMPolicy": {
      "AssociatedService": [
        "*"
      ],
      "Name": "IAM Policy"
    },
    "S3Policy": {
      "AssociatedService": [
        "Amazon S3"
      ],
      "Name": "S3 Bucket Policy"
    },
    "SNSPolicy": {
      "AssociatedService": [
        "Amazon SNS"
      ],
      "Name": "SNS Topic Policy"
    },
    "SQSPolicy": {
      "AssociatedService": [
        "Amazon SQS"
      ],
      "Name": "SQS Queue Policy"
    },
    "VPCPolicy": {
      "AssociatedService": [
        "Amazon S3",
        "Amazon DynamoDB For VPC Policies"
      ],
      "Name": "VPC Endpoint Policy"
    }
  },
  "serviceMap": {
    "AWS AppSync": {
      "ARNFormat": "arn:aws:appsync:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e",
      "ARNRegex": "^arn:aws:appsync:.+",
      "Actions": [
        "CreateApiKey",
        "CreateDataSource",
        "CreateGraphqlApi",
        "CreateResolver",
        "CreateType",
        "DeleteApiKey",
        "DeleteDataSource",
        "DeleteGraphqlApi",
        "DeleteResolver",
        "DeleteType",
        "GetDataSource",
        "GetGraphqlApi",
        "GetIntrospectionSchema",
        "GetResolver",
        "GetSchemaCreationStatus",
        "GetType",
        "GraphQL",
        "ListApiKeys",
        "ListDataSources",
        "ListGraphqlApis",
        "ListResolvers",
        "ListTypes",
        "StartSchemaCreation",
        "UpdateApiKey",
        "UpdateDataSource",
        "UpdateGraphqlApi",
        "UpdateResolver",
        "UpdateType"
      ],
      "HasResource": true,
      "StringPrefix": "appsync"
    },
    "AWS Artifact": {
      "ARNFormat": "arn:aws:artifact::\u003cresource\u003e",
      "ARNRegex": "^arn:aws:artifact::.+",
      "Actions": [
        "AcceptAgreement",
        "DownloadAgreement",
        "Get",
        "TerminateAgreement"
      ],
      "HasResource": true,
      "StringPrefix": "artifact"
    },
    "AWS Batch": {
      "Actions": [
        "CancelJob",
        "CreateComputeEnvironment",
        "CreateJobQueue",
        "DeleteComputeEnvironment",
        "DeleteJobQueue",
        "DeregisterJobDefinition",
        "DescribeComputeEnvironments",
        "DescribeJobDefinitions",
        "DescribeJobQueues",
        "DescribeJobs",
        "ListJobs",
        "RegisterJobDefinition",
        "SubmitJob",
        "TerminateJob",
        "UpdateComputeEnvironment",
        "UpdateJobQueue"
      ],
      "HasResource": false,
      "StringPrefix": "batch"
    },
    "AWS Billing": {
      "Actions": [
        "ModifyAccount",
        "ModifyBilling",
        "ModifyPaymentMethods",
        "ViewAccount",
        "ViewBilling",
        "ViewPaymentMethods",
        "ViewUsage"
      ],
      "HasResource": false,
      "StringPrefix": "aws-portal"
    },
    "AWS Budget Service": {
      "ARNFormat": "arn:aws:budgets::\u003caccount_ID\u003e:budget/\u003cbudgetname\u003e",
      "ARNRegex": "^arn:aws:budgets::.+:.+",
      "Actions": [
        "ModifyBudget",
        "ViewBudget"
      ],
      "HasResource": true,
      "StringPrefix": "budgets"
    },
    "AWS Certificate Manager": {
      "ARNFormat": "arn:aws:acm:\u003cregion\u003e:\u003caccount_ID\u003e:\u003carn_type\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:acm:.+:[0-9]+:.+",
      "Actions": [
        "AddTagsToCertificate",
        "DeleteCertificate",
        "DescribeCertificate",
        "GetCertificate",
        "ImportCertificate",
        "ListCertificates",
        "ListTagsForCertificate",
        "RemoveTagsFromCertificate",
        "RequestCertificate",
        "ResendValidationEmail"
      ],
      "HasResource": true,
      "StringPrefix": "acm"
    },
    "AWS Certificate Manager Private Certificate Authority": {
      "ARNFormat": "arn:aws:acm-pca:\u003cregion\u003e:\u003caccount_ID\u003e:\u003carn_type\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:acm-pca:.+:[0-9]+:.+",
      "Actions": [
        "CreateCertificateAuthority",
        "CreateCertificateAuthorityAuditReport",
        "DeleteCertificateAuthority",
        "DescribeCertificateAuthority",
        "DescribeCertificateAuthorityAuditReport",
        "GetCertificate",
        "GetCertificateAuthorityCertificate",
        "GetCertificateAuthorityCsr",
        "ImportCertificateAuthorityCertificate",
        "IssueCertificate",
        "ListCertificateAuthorities",
        "ListTags",
        "RestoreCertificateAuthority",
        "RevokeCertificate",
        "TagCertificateAuthority",
        "UntagCertificateAuthority",
        "UpdateCertificateAuthority"
      ],
      "HasResource": true,
      "StringPrefix": "acm-pca"
    },
    "AWS Cloud9": {
      "ARNFormat": "arn:aws:cloud9:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource_type\u003e:\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:cloud9:.+:[0-9]+:.+:.+",
      "Actions": [
        "CreateEnvironmentEC2",
        "CreateEnvironmentMembership",
        "CreateEnvironmentSSH",
        "DeleteEnvironment",
        "DeleteEnvironmentMembership",
        "DescribeEnvironmentMemberships",
        "DescribeEnvironmentStatus",
        "DescribeEnvironments",
        "GetUserPublicKey",
        "ListEnvironments",
        "UpdateEnvironment",
        "UpdateEnvironmentMembership",
        "ValidateEnvironmentName"
      ],
      "HasResource": true,
      "StringPrefix": "cloud9",
      "conditionKeys": [
        "cloud9:EnvironmentId",
        "cloud9:EnvironmentName",
        "cloud9:InstanceType",
        "cloud9:Permissions",
        "cloud9:SubnetId",
        "cloud9:UserArn"
      ]
    },
    "AWS CloudFormation": {
      "ARNFormat": "arn:aws:cloudformation:\u003cregion\u003e:\u003caccount\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:cloudformation:.+:[0-9]+:.+",
      "Actions": [
        "CancelUpdateStack",
        "ContinueUpdateRollback",
        "CreateChangeSet",
        "CreateStack",
        "CreateStackInstances",
        "CreateStackSet",
        "CreateUploadBucket",
        "DeleteChangeSet",
        "DeleteStack",
        "DeleteStackInstances",
        "DeleteStackSet",
        "DescribeAccountLimits",
        "DescribeChangeSet",
        "DescribeStackEvents",
        "DescribeStackInstance",
        "DescribeStackResource",
        "DescribeStackResources",
        "DescribeStackSet",
        "DescribeStackSetOperation",
        "DescribeStacks",
        "EstimateTemplateCost",
        "ExecuteChangeSet",
        "GetStackPolicy",
        "GetTemplate",
        "GetTemplateSummary",
        "ListChangeSets",
        "ListExports",
        "ListImports",
        "ListStackInstances",
        "ListStackResources",
        "ListStackSetOperationResults",
        "ListStackSetOperations",
        "ListStackSets",
        "ListStacks",
        "SetStackPolicy",
        "SignalResource",
        "StopStackSetOperation",
        "UpdateStack",
        "UpdateStackInstances",
        "UpdateStackSet",
        "UpdateTerminationProtection",
        "ValidateTemplate"
      ],
      "HasResource": true,
      "StringPrefix": "cloudformation",
      "conditionKeys": [
        "cloudformation:ChangeSetName",
        "cloudformation:ResourceTypes",
        "cloudformation:RoleArn",
        "cloudformation:StackPolicyUrl",
        "cloudformation:TemplateUrl"
      ]
    },
    "AWS CloudHSM": {
      "Actions": [
        "AddTagsToResource",
        "CreateCluster",
        "CreateHapg",
        "CreateHsm",
        "CreateLunaClient",
        "DeleteCluster",
        "DeleteHapg",
        "DeleteHsm",
        "DeleteLunaClient",
        "DescribeBackups",
        "DescribeClusters",
        "DescribeHapg",
        "DescribeHsm",
        "DescribeLunaClient",
        "GetConfig",
        "InitializeCluster",
        "ListAvailableZones",
        "ListHapgs",
        "ListHsms",
        "ListLunaClients",
        "ListTags",
        "ListTagsForResource",
        "ModifyHapg",
        "ModifyHsm",
        "ModifyLunaClient",
        "RemoveTagsFromResource",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": false,
      "StringPrefix": "cloudhsm"
    },
    "AWS CloudTrail": {
      "ARNFormat": "arn:aws:cloudtrail:\u003cregion\u003e:\u003caccount\u003e:\u003cresource\u003e",
      "ARNRegex": "^arn:aws:cloudtrail:.+:[0-9]+:.+",
      "Actions": [
        "AddTags",
        "CreateTrail",
        "DeleteTrail",
        "DescribeTrails",
        "GetEventSelectors",
        "GetTrailStatus",
        "ListPublicKeys",
        "ListTags",
        "LookupEvents",
        "PutEventSelectors",
        "RemoveTags",
        "StartLogging",
        "StopLogging",
        "UpdateTrail"
      ],
      "HasResource": true,
      "StringPrefix": "cloudtrail"
    },
    "AWS Code Signing for Amazon FreeRTOS": {
      "Actions": [
        "DescribeSigningJob",
        "ListSigningJobs",
        "StartSigningJob"
      ],
      "HasResource": false,
      "StringPrefix": "signer"
    },
    "AWS CodeBuild": {
      "ARNFormat": "arn:aws:codebuild:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource_type\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:codebuild:.+:[0-9]+:.+/.+",
      "Actions": [
        "BatchDeleteBuilds",
        "BatchGetBuilds",
        "BatchGetProjects",
        "CreateProject",
        "DeleteProject",
        "ListBuilds",
        "ListBuildsForProject",
        "ListConnectedOAuthAccounts",
        "ListCuratedEnvironmentImages",
        "ListProjects",
        "ListRepositories",
        "PersistOAuthToken",
        "StartBuild",
        "StopBuild",
        "UpdateProject"
      ],
      "HasResource": true,
      "StringPrefix": "codebuild"
    },
    "AWS CodeCommit": {
      "ARNFormat": "arn:aws:codecommit:\u003cregion\u003e:\u003caccount_ID\u003e:\u003crepository_name\u003e",
      "ARNRegex": "^arn:aws:codecommit:.+",
      "Actions": [
        "BatchGetPullRequests",
        "BatchGetRepositories",
        "CancelUploadArchive",
        "CreateBranch",
        "CreatePullRequest",
        "CreateRepository",
        "DeleteBranch",
        "DeleteCommentContent",
        "DeleteRepository",
        "DescribePullRequestEvents",
        "GetBlob",
        "GetBranch",
        "GetComment",
        "GetCommentsForComparedCommit",
        "GetCommentsForPullRequest",
        "GetCommit",
        "GetCommitHistory",
        "GetCommitsFromMergeBase",
        "GetDifferences",
        "GetMergeConflicts",
        "GetObjectIdentifier",
        "GetPullRequest",
        "GetReferences",
        "GetRepository",
        "GetRepositoryTriggers",
        "GetTree",
        "GetUploadArchiveStatus",
        "GitPull",
        "GitPush",
        "ListBranches",
        "ListPullRequests",
        "ListRepositories",
        "MergePullRequestByFastForward",
        "PostCommentForComparedCommit",
        "PostCommentForPullRequest",
        "PostCommentReply",
        "PutFile",
        "PutRepositoryTriggers",
        "TestRepositoryTriggers",
        "UpdateComment",
        "UpdateDefaultBranch",
        "UpdatePullRequestDescription",
        "UpdatePullRequestStatus",
        "UpdatePullRequestTitle",
        "UpdateRepositoryDescription",
        "UpdateRepositoryName",
        "UploadArchive"
      ],
      "HasResource": true,
      "StringPrefix": "codecommit"
    },
    "AWS CodeDeploy": {
      "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier",
      "ARNRegex": "^arn:aws:codedeploy:.+",
      "Actions": [
        "AddTagsToOnPremisesInstances",
        "BatchGetApplicationRevisions",
        "BatchGetApplications",
        "BatchGetDeploymentGroups",
        "BatchGetDeploymentInstances",
        "BatchGetDeployments",
        "BatchGetOnPremisesInstances",
        "ContinueDeployment",
        "CreateApplication",
        "CreateDeployment",
        "CreateDeploymentConfig",
        "CreateDeploymentGroup",
        "DeleteApplication",
        "DeleteDeploymentConfig",
        "DeleteDeploymentGroup",
        "DeregisterOnPremisesInstance",
        "GetApplication",
        "GetApplicationRevision",
        "GetDeployment",
        "GetDeploymentConfig",
        "GetDeploymentGroup",
        "GetDeploymentInstance",
        "GetOnPremisesInstance",
        "ListApplicationRevisions",
        "ListApplications",
        "ListDeploymentConfigs",
        "ListDeploymentGroups",
        "ListDeploymentInstances",
        "ListDeployments",
        "ListOnPremisesInstances",
        "PutLifecycleEventHookExecutionStatus",
        "RegisterApplicationRevision",
        "RegisterOnPremisesInstance",
        "RemoveTagsFromOnPremisesInstances",
        "StopDeployment",
        "UpdateApplication",
        "UpdateDeploymentGroup"
      ],
      "HasResource": true,
      "StringPrefix": "codedeploy"
    },
    "AWS CodePipeline": {
      "ARNFormat": "arn:aws:codepipeline:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cpath_to_pipeline_resource\u003e",
      "ARNRegex": "arn:aws:codepipeline:.+",
      "Actions": [
        "AcknowledgeJob",
        "AcknowledgeThirdPartyJob",
        "CreateCustomActionType",
        "CreatePipeline",
        "DeleteCustomActionType",
        "DeletePipeline",
        "DeleteWebhook",
        "DeregisterWebhookWithThirdParty",
        "DisableStageTransition",
        "EnableStageTransition",
        "GetJobDetails",
        "GetPipeline",
        "GetPipelineExecution",
        "GetPipelineState",
        "GetThirdPartyJobDetails",
        "ListActionTypes",
        "ListPipelineExecutions",
        "ListPipelines",
        "ListWebhooks",
        "PollForJobs",
        "PollForThirdPartyJobs",
        "PutActionRevision",
        "PutApprovalResult",
        "PutJobFailureResult",
        "PutJobSuccessResult",
        "PutThirdPartyJobFailureResult",
        "PutThirdPartyJobSuccessResult",
        "PutWebhook",
        "RegisterWebhookWithThirdParty",
        "RetryStageExecution",
        "StartPipelineExecution",
        "UpdatePipeline"
      ],
      "HasResource": true,
      "StringPrefix": "codepipeline"
    },
    "AWS CodeStar": {
      "ARNFormat": "arn:aws:codestar:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource_type\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:codestar:.+:[0-9]+:project/.+",
      "Actions": [
        "AssociateTeamMember",
        "CreateProject",
        "CreateUserProfile",
        "DeleteExtendedAccess",
        "DeleteProject",
        "DeleteUserProfile",
        "DescribeProject",
        "DescribeUserProfile",
        "DisassociateTeamMember",
        "GetExtendedAccess",
        "ListProjects",
        "ListResources",
        "ListTeamMembers",
        "ListUserProfiles",
        "PutExtendedAccess",
        "UpdateProject",
        "UpdateTeamMember",
        "UpdateUserProfile",
        "VerifyServiceRole"
      ],
      "HasResource": true,
      "StringPrefix": "codestar"
    },
    "AWS Config": {
      "ARNFormat": "arn:\u003cpartition\u003e:config:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceId\u003e",
      "ARNRegex": "arn:\u003cpartition\u003e:config:.+",
      "Actions": [
        "BatchGetResourceConfig",
        "DeleteAggregationAuthorization",
        "DeleteConfigRule",
        "DeleteConfigurationAggregator",
        "DeleteConfigurationRecorder",
        "DeleteDeliveryChannel",
        "DeleteEvaluationResults",
        "DeletePendingAggregationRequest",
        "DeliverConfigSnapshot",
        "DescribeAggregateComplianceByConfigRules",
        "DescribeAggregationAuthorizations",
        "DescribeComplianceByConfigRule",
        "DescribeComplianceByResource",
        "DescribeConfigRuleEvaluationStatus",
        "DescribeConfigRules",
        "DescribeConfigurationAggregatorSourcesStatus",
        "DescribeConfigurationAggregators",
        "DescribeConfigurationRecorderStatus",
        "DescribeConfigurationRecorders",
        "DescribeDeliveryChannelStatus",
        "DescribeDeliveryChannels",
        "DescribePendingAggregationRequests",
        "GetAggregateComplianceDetailsByConfigRule",
        "GetAggregateConfigRuleComplianceSummary",
        "GetComplianceDetailsByConfigRule",
        "GetComplianceDetailsByResource",
        "GetComplianceSummaryByConfigRule",
        "GetComplianceSummaryByResourceType",
        "GetResourceConfigHistory",
        "GetResources",
        "GetTagKeys",
        "ListDiscoveredResources",
        "PutAggregationAuthorization",
        "PutConfigRule",
        "PutConfigurationAggregator",
        "PutConfigurationRecorder",
        "PutDeliveryChannel",
        "PutEvaluations",
        "StartConfigRulesEvaluation",
        "StartConfigurationRecorder",
        "StopConfigurationRecorder"
      ],
      "HasResource": true,
      "StringPrefix": "config"
    },
    "AWS Cost Explorer Service": {
      "ARNFormat": "arn:aws:ce::\u003caccount_ID\u003e:ce",
      "ARNRegex": "^arn:aws:ce::.+:.+",
      "Actions": [
        "GetCostAndUsage",
        "GetDimensionValues",
        "GetReservationUtilization",
        "GetTags"
      ],
      "HasResource": false,
      "StringPrefix": "ce"
    },
    "AWS Cost and Usage Report": {
      "ARNFormat": "arn:aws:cur:\u003cregion\u003e:\u003caccount_ID\u003e:definition/\u003creportname\u003e",
      "ARNRegex": "^arn:aws:cur:.+:.+:.+",
      "Actions": [
        "DeleteReportDefinition",
        "DescribeReportDefinitions",
        "PutReportDefinition"
      ],
      "HasResource": true,
      "StringPrefix": "cur"
    },
    "AWS Database Migration Service": {
      "ARNFormat": "arn:aws:dms:\u003cregion\u003e:\u003caccount\u003e:\u003cresource\u003e",
      "ARNRegex": "arn:aws:dms:.+",
      "Actions": [
        "AddTagsToResource",
        "CreateEndpoint",
        "CreateReplicationInstance",
        "CreateReplicationSubnetGroup",
        "CreateReplicationTask",
        "DeleteEndpoint",
        "DeleteEventSubscription",
        "DeleteReplicationInstance",
        "DeleteReplicationSubnetGroup",
        "DeleteReplicationTask",
        "DescribeAccountAttributes",
        "DescribeCertificates",
        "DescribeConnections",
        "DescribeEndpointTypes",
        "DescribeEndpoints",
        "DescribeEventCategories",
        "DescribeEventSubscriptions",
        "DescribeEvents",
        "DescribeOrderableReplicationInstances",
        "DescribeRefreshSchemasStatus",
        "DescribeReplicationInstances",
        "DescribeReplicationSubnetGroups",
        "DescribeReplicationTasks",
        "DescribeSchemas",
        "DescribeTableStatistics",
        "ListTagsForResource",
        "ModifyEndpoint",
        "ModifyEventSubscription",
        "ModifyReplicationInstance",
        "ModifyReplicationSubnetGroup",
        "ModifyReplicationTask",
        "RefreshSchemas",
        "RemoveTagsFromResource",
        "StartReplicationTask",
        "StopReplicationTask",
        "TestConnection"
      ],
      "HasResource": false,
      "StringPrefix": "dms"
    },
    "AWS Device Farm": {
      "Actions": [
        "CreateDevicePool",
        "CreateNetworkProfile",
        "CreateProject",
        "CreateRemoteAccessSession",
        "CreateUpload",
        "DeleteDevicePool",
        "DeleteNetworkProfile",
        "DeleteProject",
        "DeleteRemoteAccessSession",
        "DeleteRun",
        "DeleteUpload",
        "GetAccountSettings",
        "GetDevice",
        "GetDevicePool",
        "GetDevicePoolCompatibility",
        "GetJob",
        "GetNetworkProfile",
        "GetOfferingStatus",
        "GetProject",
        "GetRemoteAccessSession",
        "GetRun",
        "GetSuite",
        "GetTest",
        "GetUpload",
        "InstallToRemoteAccessSession",
        "ListArtifacts",
        "ListDevicePools",
        "ListDevices",
        "ListJobs",
        "ListNetworkProfiles",
        "ListOfferingTransactions",
        "ListOfferings",
        "ListProjects",
        "ListRemoteAccessSessions",
        "ListRuns",
        "ListSamples",
        "ListSuites",
        "ListTests",
        "ListUniqueProblems",
        "ListUploads",
        "PurchaseOffering",
        "RenewOffering",
        "ScheduleRun",
        "StopRemoteAccessSession",
        "StopRun",
        "UpdateDevicePool",
        "UpdateNetworkProfile",
        "UpdateProject"
      ],
      "HasResource": false,
      "StringPrefix": "devicefarm"
    },
    "AWS Direct Connect": {
      "Actions": [
        "AllocateConnectionOnInterconnect",
        "AllocatePrivateVirtualInterface",
        "AllocatePublicVirtualInterface",
        "ConfirmConnection",
        "ConfirmPrivateVirtualInterface",
        "ConfirmPublicVirtualInterface",
        "CreateConnection",
        "CreateInterconnect",
        "CreatePrivateVirtualInterface",
        "CreatePublicVirtualInterface",
        "DeleteConnection",
        "DeleteInterconnect",
        "DeleteVirtualInterface",
        "DescribeConnectionLoa",
        "DescribeConnections",
        "DescribeConnectionsOnInterconnect",
        "DescribeInterconnectLoa",
        "DescribeInterconnects",
        "DescribeLocations",
        "DescribeVirtualGateways",
        "DescribeVirtualInterfaces"
      ],
      "HasResource": false,
      "StringPrefix": "directconnect"
    },
    "AWS Directory Service": {
      "Actions": [
        "AddIpRoutes",
        "AddTagsToResource",
        "AuthorizeApplication",
        "CancelSchemaExtension",
        "ConnectDirectory",
        "CreateAlias",
        "CreateComputer",
        "CreateConditionalForwarder",
        "CreateDirectory",
        "CreateMicrosoftAD",
        "CreateSnapshot",
        "CreateTrust",
        "DeleteConditionalForwarder",
        "DeleteDirectory",
        "DeleteSnapshot",
        "DeleteTrust",
        "DeregisterEventTopic",
        "DescribeConditionalForwarders",
        "DescribeDirectories",
        "DescribeEventTopics",
        "DescribeSnapshots",
        "DescribeTrusts",
        "DisableRadius",
        "DisableSso",
        "EnableRadius",
        "EnableSso",
        "GetDirectoryLimits",
        "GetSnapshotLimits",
        "ListAuthorizedApplications",
        "ListIpRoutes",
        "ListSchemaExtensions",
        "ListTagsForResource",
        "RegisterEventTopic",
        "RemoveIpRoutes",
        "RemoveTagsFromResource",
        "RestoreFromSnapshot",
        "StartSchemaExtension",
        "UnauthorizeApplication",
        "UpdateConditionalForwarder",
        "UpdateRadius",
        "VerifyTrust"
      ],
      "HasResource": false,
      "StringPrefix": "ds"
    },
    "AWS Elastic Beanstalk": {
      "ARNFormat": "arn:aws:elasticbeanstalk:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource_type\u003e/\u003cpath_to_resource\u003e",
      "ARNRegex": "^arn:aws:elasticbeanstalk:.+:.*:.+/.+",
      "Actions": [
        "AbortEnvironmentUpdate",
        "ApplyEnvironmentManagedAction",
        "CheckDNSAvailability",
        "ComposeEnvironments",
        "CreateApplication",
        "CreateApplicationVersion",
        "CreateConfigurationTemplate",
        "CreateEnvironment",
        "CreatePlatformVersion",
        "CreateStorageLocation",
        "DeleteApplication",
        "DeleteApplicationVersion",
        "DeleteConfigurationTemplate",
        "DeleteEnvironmentConfiguration",
        "DeletePlatformVersion",
        "DescribeApplicationVersions",
        "DescribeApplications",
        "DescribeConfigurationOptions",
        "DescribeConfigurationSettings",
        "DescribeEnvironmentHealth",
        "DescribeEnvironmentManagedActionHistory",
        "DescribeEnvironmentManagedActions",
        "DescribeEnvironmentResources",
        "DescribeEnvironments",
        "DescribeEvents",
        "DescribeInstancesHealth",
        "DescribePlatformVersion",
        "ListAvailableSolutionStacks",
        "ListPlatformVersions",
        "RebuildEnvironment",
        "RequestEnvironmentInfo",
        "RestartAppServer",
        "RetrieveEnvironmentInfo",
        "SwapEnvironmentCNAMEs",
        "TerminateEnvironment",
        "UpdateApplication",
        "UpdateApplicationResourceLifecycle",
        "UpdateApplicationVersion",
        "UpdateConfigurationTemplate",
        "UpdateEnvironment",
        "ValidateConfigurationSettings"
      ],
      "HasResource": true,
      "StringPrefix": "elasticbeanstalk",
      "conditionKeys": [
        "elasticbeanstalk:FromApplication",
        "elasticbeanstalk:FromApplicationVersion",
        "elasticbeanstalk:FromConfigurationTemplate",
        "elasticbeanstalk:FromEnvironment",
        "elasticbeanstalk:FromSolutionStack",
        "elasticbeanstalk:InApplication"
      ]
    },
    "AWS Elemental MediaConvert": {
      "Actions": [
        "CancelJob",
        "CreateJob",
        "CreateJobTemplate",
        "CreatePreset",
        "CreateQueue",
        "DeleteJobTemplate",
        "DeletePreset",
        "DeleteQueue",
        "DescribeEndpoints",
        "GetJob",
        "GetJobTemplate",
        "GetPreset",
        "GetQueue",
        "ListJobTemplates",
        "ListJobs",
        "ListPresets",
        "ListQueues",
        "UpdateJobTemplate",
        "UpdatePreset",
        "UpdateQueue"
      ],
      "HasResource": false,
      "StringPrefix": "mediaconvert"
    },
    "AWS Elemental MediaLive": {
      "Actions": [
        "CreateChannel",
        "CreateInput",
        "CreateInputSecurityGroup",
        "DeleteChannel",
        "DeleteInput",
        "DeleteInputSecurityGroup",
        "DescribeChannel",
        "DescribeInput",
        "DescribeInputSecurityGroup",
        "ListChannels",
        "ListInputSecurityGroups",
        "ListInputs",
        "StartChannel",
        "StopChannel"
      ],
      "HasResource": false,
      "StringPrefix": "medialive"
    },
    "AWS Elemental MediaPackage": {
      "ARNFormat": "arn:aws:mediapackage:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource\u003e/\u003cidentifier\u003e",
      "ARNRegex": "^arn:aws:mediapackage:.+",
      "Actions": [
        "CreateChannel",
        "CreateOriginEndpoint",
        "DeleteChannel",
        "DeleteOriginEndpoint",
        "DescribeChannel",
        "DescribeOriginEndpoint",
        "ListChannels",
        "ListOriginEndpoints",
        "UpdateChannel",
        "UpdateOriginEndpoint"
      ],
      "HasResource": true,
      "StringPrefix": "mediapackage"
    },
    "AWS Elemental MediaStore": {
      "ARNFormat": "arn:aws:mediastore:\u003cRegion\u003e:\u003cAccount\u003e:\u003cResource\u003e",
      "ARNRegex": "^arn:aws:mediastore:.+:.+",
      "Actions": [
        "CreateContainer",
        "DeleteContainer",
        "DeleteContainerPolicy",
        "DeleteObject",
        "DescribeContainer",
        "DescribeObject",
        "GetContainerPolicy",
        "GetObject",
        "ListContainers",
        "ListItems",
        "PutContainerPolicy",
        "PutObject"
      ],
      "HasResource": true,
      "StringPrefix": "mediastore"
    },
    "AWS Firewall Manager": {
      "ARNFormat": "arn:aws:fms:\u003cregion\u003e:\u003caccount_id\u003e:\u003cresource\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:fms:.+:[0-9]+:.+/.+",
      "Actions": [
        "AssociateAdminAccount",
        "DeleteNotificationChannel",
        "DeletePolicy",
        "DisassociateAdminAccount",
        "GetAdminAccount",
        "GetComplianceDetail",
        "GetNotificationChannel",
        "GetPolicy",
        "ListComplianceStatus",
        "ListPolicies",
        "PutNotificationChannel",
        "PutPolicy"
      ],
      "HasResource": true,
      "StringPrefix": "fms"
    },
    "AWS Glue": {
      "Actions": [
        "BatchCreatePartition",
        "BatchDeleteConnection",
        "BatchDeletePartition",
        "BatchDeleteTable",
        "BatchGetPartition",
        "CreateClassifier",
        "CreateConnection",
        "CreateCrawler",
        "CreateDatabase",
        "CreateDevEndpoint",
        "CreateJob",
        "CreatePartition",
        "CreateScript",
        "CreateTable",
        "CreateTrigger",
        "CreateUserDefinedFunction",
        "DeleteClassifier",
        "DeleteConnection",
        "DeleteCrawler",
        "DeleteDatabase",
        "DeleteDevEndpoint",
        "DeleteJob",
        "DeletePartition",
        "DeleteTable",
        "DeleteTrigger",
        "DeleteUserDefinedFunction",
        "GetCatalogImportStatus",
        "GetClassifier",
        "GetClassifiers",
        "GetConnection",
        "GetConnections",
        "GetCrawler",
        "GetCrawlerMetrics",
        "GetCrawlers",
        "GetDatabase",
        "GetDatabases",
        "GetDataflowGraph",
        "GetDevEndpoint",
        "GetDevEndpoints",
        "GetJob",
        "GetJobRun",
        "GetJobRuns",
        "GetJobs",
        "GetMapping",
        "GetPartition",
        "GetPartitions",
        "GetPlan",
        "GetTable",
        "GetTableVersions",
        "GetTables",
        "GetTrigger",
        "GetTriggers",
        "GetUserDefinedFunction",
        "GetUserDefinedFunctions",
        "ImportCatalogToGlue",
        "ResetJobBookmark",
        "StartCrawler",
        "StartCrawlerSchedule",
        "StartJobRun",
        "StartTrigger",
        "StopCrawler",
        "StopCrawlerSchedule",
        "StopTrigger",
        "UpdateClassifier",
        "UpdateConnection",
        "UpdateCrawler",
        "UpdateDatabase",
        "UpdateDevEndpoint",
        "UpdateJob",
        "UpdatePartition",
        "UpdateTable",
        "UpdateTrigger",
        "UpdateUserDefinedFunction"
      ],
      "HasResource": false,
      "StringPrefix": "glue"
    },
    "AWS Greengrass": {
      "ARNFormat": "arn:aws:greengrass:\u003cregion\u003e:\u003caccount_ID\u003e:/greengrass/\u003ctype\u003e/\u003cId\u003e",
      "ARNRegex": "^arn:aws:greengrass:.+:[0-9]+:.+",
      "Actions": [
        "AssociateRoleToGroup",
        "AssociateServiceRoleToAccount",
        "CreateCoreDefinition",
        "CreateCoreDefinitionVersion",
        "CreateDeployment",
        "CreateDeviceDefinition",
        "CreateDeviceDefinitionVersion",
        "CreateFunctionDefinition",
        "CreateFunctionDefinitionVersion",
        "CreateGroup",
        "CreateGroupCertificateAuthority",
        "CreateGroupVersion",
        "CreateLoggerDefinition",
        "CreateLoggerDefinitionVersion",
        "CreateResourceDefinition",
        "CreateResourceDefinitionVersion",
        "CreateSoftwareUpdateJob",
        "CreateSubscriptionDefinition",
        "CreateSubscriptionDefinitionVersion",
        "DeleteCoreDefinition",
        "DeleteDeviceDefinition",
        "DeleteFunctionDefinition",
        "DeleteGroup",
        "DeleteLoggerDefinition",
        "DeleteResourceDefinition",
        "DeleteSubscriptionDefinition",
        "DisassociateRoleFromGroup",
        "DisassociateServiceRoleFromAccount",
        "GetAssociatedRole",
        "GetConnectivityInfo",
        "GetCoreDefinition",
        "GetCoreDefinitionVersion",
        "GetDeploymentStatus",
        "GetDeviceDefinition",
        "GetDeviceDefinitionVersion",
        "GetFunctionDefinition",
        "GetFunctionDefinitionVersion",
        "GetGroup",
        "GetGroupCertificateAuthority",
        "GetGroupCertificateConfiguration",
        "GetGroupVersion",
        "GetLoggerDefinition",
        "GetLoggerDefinitionVersion",
        "GetResourceDefinition",
        "GetResourceDefinitionVersion",
        "GetServiceRoleForAccount",
        "GetSubscriptionDefinition",
        "GetSubscriptionDefinitionVersion",
        "ListCoreDefinitionVersions",
        "ListCoreDefinitions",
        "ListDeployments",
        "ListDeviceDefinitionVersions",
        "ListDeviceDefinitions",
        "ListFunctionDefinitionVersions",
        "ListFunctionDefinitions",
        "ListGroupCertificateAuthorities",
        "ListGroupVersions",
        "ListGroups",
        "ListLoggerDefinitionVersions",
        "ListLoggerDefinitions",
        "ListResourceDefinitionVersions",
        "ListResourceDefinitions",
        "ListSubscriptionDefinitionVersions",
        "ListSubscriptionDefinitions",
        "ResetDeployments",
        "UpdateConnectivityInfo",
        "UpdateCoreDefinition",
        "UpdateDeviceDefinition",
        "UpdateFunctionDefinition",
        "UpdateGroup",
        "UpdateGroupCertificateConfiguration",
        "UpdateLoggerDefinition",
        "UpdateResourceDefinition",
        "UpdateSubscriptionDefinition"
      ],
      "HasResource": true,
      "StringPrefix": "greengrass"
    },
    "AWS Health APIs and Notifications": {
      "ARNFormat": "arn:aws:health::\u003cnamespace\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:health:[^:]*:[^:]*:.+",
      "Actions": [
        "DescribeAffectedEntities",
        "DescribeEntityAggregates",
        "DescribeEventAggregates",
        "DescribeEventDetails",
        "DescribeEventTypes",
        "DescribeEvents"
      ],
      "HasResource": true,
      "StringPrefix": "health"
    },
    "AWS Import Export Disk Service": {
      "Actions": [
        "CancelJob",
        "CreateJob",
        "GetShippingLabel",
        "GetStatus",
        "ListJobs",
        "UpdateJob"
      ],
      "HasResource": false,
      "StringPrefix": "importexport"
    },
    "AWS IoT": {
      "ARNFormat": "arn:aws:iot:\u003cregion\u003e:\u003caccount_ID\u003e:\u003ctype\u003e/\u003cname\u003e",
      "ARNRegex": "^arn:aws:iot:.+:[0-9]+:.+",
      "Actions": [
        "AcceptCertificateTransfer",
        "AddThingToThingGroup",
        "AssociateTargetsWithJob",
        "AttachPolicy",
        "AttachPrincipalPolicy",
        "AttachThingPrincipal",
        "CancelCertificateTransfer",
        "CancelJob",
        "ClearDefaultAuthorizer",
        "Connect",
        "CreateAuthorizer",
        "CreateCertificateFromCsr",
        "CreateJob",
        "CreateKeysAndCertificate",
        "CreateOTAUpdateJob",
        "CreatePolicy",
        "CreatePolicyVersion",
        "CreateRoleAlias",
        "CreateStream",
        "CreateThing",
        "CreateThingGroup",
        "CreateThingType",
        "CreateTopicRule",
        "DeleteAuthorizer",
        "DeleteCACertificate",
        "DeleteCertificate",
        "DeleteOTAUpdateJob",
        "DeletePolicy",
        "DeletePolicyVersion",
        "DeleteRegistrationCode",
        "DeleteRoleAlias",
        "DeleteStream",
        "DeleteThing",
        "DeleteThingGroup",
        "DeleteThingShadow",
        "DeleteThingType",
        "DeleteTopicRule",
        "DeleteV2LoggingLevel",
        "DeprecateThingType",
        "DescribeAuthorizer",
        "DescribeCACertificate",
        "DescribeCertificate",
        "DescribeDefaultAuthorizer",
        "DescribeEndpoint",
        "DescribeEventConfigurations",
        "DescribeIndex",
        "DescribeJob",
        "DescribeJobExecution",
        "DescribeRoleAlias",
        "DescribeStream",
        "DescribeThing",
        "DescribeThingGroup",
        "DescribeThingRegistrationTask",
        "DescribeThingType",
        "DetachPolicy",
        "DetachPrincipalPolicy",
        "DetachThingPrincipal",
        "DisableTopicRule",
        "EnableTopicRule",
        "GetEffectivePolicies",
        "GetIndexingConfiguration",
        "GetJobDocument",
        "GetLoggingOptions",
        "GetOTAUpdateJob",
        "GetPolicy",
        "GetPolicyVersion",
        "GetRegistrationCode",
        "GetThingShadow",
        "GetTopicRule",
        "GetV2LoggingOptions",
        "ListAttachedPolicies",
        "ListAuthorizers",
        "ListCACertificates",
        "ListCertificates",
        "ListCertificatesByCA",
        "ListIndices",
        "ListJobExecutionsForJob",
        "ListJobExecutionsForThing",
        "ListJobs",
        "ListOTAUpdateJobs",
        "ListOutgoingCertificates",
        "ListPolicies",
        "ListPolicyPrincipals",
        "ListPolicyVersions",
        "ListPrincipalPolicies",
        "ListPrincipalThings",
        "ListRoleAliases",
        "ListStreams",
        "ListTargetsForPolicy",
        "ListThingGroups",
        "ListThingGroupsForThing",
        "ListThingPrincipals",
        "ListThingRegistrationTaskReports",
        "ListThingRegistrationTasks",
        "ListThingTypes",
        "ListThings",
        "ListThingsInThingGroup",
        "ListTopicRules",
        "ListV2LoggingLevels",
        "Publish",
        "Receive",
        "RegisterCACertificate",
        "RegisterCertificate",
        "RegisterThing",
        "RejectCertificateTransfer",
        "RemoveThingFromThingGroup",
        "ReplaceTopicRule",
        "SearchIndex",
        "SetDefaultAuthorizer",
        "SetDefaultPolicyVersion",
        "SetLoggingOptions",
        "SetV2LoggingLevel",
        "SetV2LoggingOptions",
        "StartThingRegistrationTask",
        "StopThingRegistrationTask",
        "Subscribe",
        "TestAuthorization",
        "TestInvokeAuthorizer",
        "TransferCertificate",
        "UpdateAuthorizer",
        "UpdateCACertificate",
        "UpdateCertificate",
        "UpdateEventConfigurations",
        "UpdateIndexingConfiguration",
        "UpdateRoleAlias",
        "UpdateStream",
        "UpdateThing",
        "UpdateThingGroup",
        "UpdateThingGroupsForThing",
        "UpdateThingShadow"
      ],
      "HasResource": true,
      "StringPrefix": "iot"
    },
    "AWS IoT 1-Click": {
      "ARNFormat": "arn:aws:iot1click:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource-type\u003e/\u003cresource_name\u003e",
      "ARNRegex": "^arn:aws:iot1click:.+:[0-9]+:.+",
      "Actions": [
        "AssociateDeviceWithPlacement",
        "ClaimDeviceByClaimCode",
        "CreatePlacement",
        "CreateProject",
        "DeletePlacement",
        "DeleteProject",
        "DescribeDevice",
        "DescribePlacement",
        "DescribeProject",
        "DisassociateDeviceFromPlacement",
        "FinalizeDeviceClaim",
        "GetDeviceMethods",
        "GetDevicesInPlacement",
        "InitializeDeviceClaim",
        "InvokeDeviceMethod",
        "ListDeviceEvents",
        "ListDevices",
        "ListPlacements",
        "ListProjects",
        "UnclaimDevice",
        "UpdateDeviceState",
        "UpdatePlacement",
        "UpdateProject"
      ],
      "HasResource": true,
      "StringPrefix": "iot1click"
    },
    "AWS IoT Analytics": {
      "ARNFormat": "arn:aws:iotanalytics:\u003cregion\u003e:\u003caccount_ID\u003e:\u003ctype\u003e/\u003cname\u003e",
      "ARNRegex": "^arn:aws:iotanalytics:.+",
      "Actions": [
        "BatchPutMessage",
        "CancelPipelineReprocessing",
        "CreateChannel",
        "CreateDataset",
        "CreateDatasetContent",
        "CreateDatastore",
        "CreatePipeline",
        "DeleteChannel",
        "DeleteDataset",
        "DeleteDatasetContent",
        "DeleteDatastore",
        "DeletePipeline",
        "DescribeChannel",
        "DescribeDataset",
        "DescribeDatastore",
        "DescribeLoggingOptions",
        "DescribePipeline",
        "GetDatasetContent",
        "ListChannels",
        "ListDatasets",
        "ListDatastores",
        "ListPipelines",
        "ListTagsForResource",
        "PutLoggingOptions",
        "RunPipelineActivity",
        "SampleChannelData",
        "StartPipelineReprocessing",
        "TagResource",
        "UntagResource",
        "UpdateChannel",
        "UpdateDataset",
        "UpdateDatastore",
        "UpdatePipeline"
      ],
      "HasResource": true,
      "StringPrefix": "iotanalytics"
    },
    "AWS Key Management Service": {
      "ARNFormat": "arn:aws:kms:\u003cregion\u003e:\u003caccount_id\u003e:\u003cresource_type\u003e/\u003cid\u003e",
      "ARNRegex": "^arn:aws:kms:.+",
      "Actions": [
        "CancelKeyDeletion",
        "CreateAlias",
        "CreateGrant",
        "CreateKey",
        "Decrypt",
        "DeleteAlias",
        "DeleteImportedKeyMaterial",
        "DescribeKey",
        "DisableKey",
        "DisableKeyRotation",
        "EnableKey",
        "EnableKeyRotation",
        "Encrypt",
        "GenerateDataKey",
        "GenerateDataKeyWithoutPlaintext",
        "GenerateRandom",
        "GetKeyPolicy",
        "GetKeyRotationStatus",
        "GetParametersForImport",
        "ImportKeyMaterial",
        "ListAliases",
        "ListGrants",
        "ListKeyPolicies",
        "ListKeys",
        "ListResourceTags",
        "ListRetirableGrants",
        "PutKeyPolicy",
        "ReEncryptFrom",
        "ReEncryptTo",
        "RetireGrant",
        "RevokeGrant",
        "ScheduleKeyDeletion",
        "TagResource",
        "UntagResource",
        "UpdateAlias",
        "UpdateKeyDescription"
      ],
      "HasResource": true,
      "StringPrefix": "kms",
      "conditionKeys": [
        "kms:BypassPolicyLockoutSafetyCheck",
        "kms:CallerAccount",
        "kms:EncryptionContextKeys",
        "kms:ExpirationModel",
        "kms:GrantConstraintType",
        "kms:GrantIsForAWSResource",
        "kms:GrantOperations",
        "kms:GranteePrincipal",
        "kms:KeyOrigin",
        "kms:ReEncryptOnSameKey",
        "kms:RetiringPrincipal",
        "kms:ValidTo",
        "kms:ViaService",
        "kms:WrappingAlgorithm",
        "kms:WrappingKeySpec"
      ]
    },
    "AWS Lambda": {
      "ARNFormat": "arn:aws:lambda:\u003cregion\u003e:\u003caccount\u003e:function:\u003cfunctionName\u003e",
      "ARNRegex": "^arn:aws:lambda:.+",
      "Actions": [
        "AddPermission",
        "CreateAlias",
        "CreateEventSourceMapping",
        "CreateFunction",
        "DeleteAlias",
        "DeleteEventSourceMapping",
        "DeleteFunction",
        "DeleteFunctionConcurrency",
        "EnableReplication",
        "GetAccountSettings",
        "GetAlias",
        "GetEventSourceMapping",
        "GetFunction",
        "GetFunctionConfiguration",
        "GetPolicy",
        "InvokeAsync",
        "InvokeFunction",
        "ListAliases",
        "ListEventSourceMappings",
        "ListFunctions",
        "ListTags",
        "ListVersionsByFunction",
        "PublishVersion",
        "PutFunctionConcurrency",
        "RemovePermission",
        "TagResource",
        "UntagResource",
        "UpdateAlias",
        "UpdateEventSourceMapping",
        "UpdateFunctionCode",
        "UpdateFunctionConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "lambda"
    },
    "AWS Marketplace": {
      "Actions": [
        "Subscribe",
        "Unsubscribe",
        "ViewSubscriptions"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Marketplace Management Portal": {
      "Actions": [
        "uploadFiles",
        "viewMarketing",
        "viewReports",
        "viewSupport"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace-management"
    },
    "AWS Marketplace Metering Service": {
      "Actions": [
        "BatchMeterUsage",
        "MeterUsage",
        "ResolveCustomer"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Migration Hub": {
      "ARNFormat": "arn:aws:mgh:\u003cregion\u003e:\u003cnamespace\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:mgh:[a-z0-9-]+:[0-9]{12}:.+",
      "Actions": [
        "AssociateCreatedArtifact",
        "AssociateDiscoveredResource",
        "CreateProgressUpdateStream",
        "DeleteProgressUpdateStream",
        "DescribeApplicationState",
        "DescribeMigrationTask",
        "DisassociateCreatedArtifact",
        "DisassociateDiscoveredResource",
        "ImportMigrationTask",
        "ListCreatedArtifacts",
        "ListDiscoveredResources",
        "ListMigrationTasks",
        "ListProgressUpdateStreams",
        "NotifyApplicationState",
        "NotifyMigrationTaskState",
        "PutResourceAttributes"
      ],
      "HasResource": true,
      "StringPrefix": "mgh"
    },
    "AWS Mobile Hub": {
      "ARNFormat": "arn:aws:mobilehub:\u003cregion\u003e:\u003caws_account_ID\u003e:project/\u003cproject_ID\u003e",
      "ARNRegex": "^arn:aws:mobilehub:.+:[0-9]+:.+",
      "Actions": [
        "CreateProject",
        "CreateServiceRole",
        "DeleteProject",
        "DeleteProjectSnapshot",
        "DeployToStage",
        "DescribeBundle",
        "ExportBundle",
        "ExportProject",
        "GenerateProjectParameters",
        "GetProject",
        "GetProjectSnapshot",
        "ImportProject",
        "InstallBundle",
        "ListAvailableConnectors",
        "ListAvailableFeatures",
        "ListAvailableRegions",
        "ListBundles",
        "ListProjectSnapshots",
        "ListProjects",
        "SynchronizeProject",
        "UpdateProject",
        "VerifyServiceRole"
      ],
      "HasResource": true,
      "StringPrefix": "mobilehub"
    },
    "AWS OpsWorks": {
      "Actions": [
        "AssignInstance",
        "AssignVolume",
        "AssociateElasticIp",
        "AttachElasticLoadBalancer",
        "CloneStack",
        "CreateApp",
        "CreateDeployment",
        "CreateInstance",
        "CreateLayer",
        "CreateStack",
        "CreateUserProfile",
        "DeleteApp",
        "DeleteInstance",
        "DeleteLayer",
        "DeleteStack",
        "DeleteUserProfile",
        "DeregisterEcsCluster",
        "DeregisterElasticIp",
        "DeregisterInstance",
        "DeregisterRdsDbInstance",
        "DeregisterVolume",
        "DescribeAgentVersions",
        "DescribeApps",
        "DescribeCommands",
        "DescribeDeployments",
        "DescribeEcsClusters",
        "DescribeElasticIps",
        "DescribeElasticLoadBalancers",
        "DescribeInstances",
        "DescribeLayers",
        "DescribeLoadBasedAutoScaling",
        "DescribeMyUserProfile",
        "DescribePermissions",
        "DescribeRaidArrays",
        "DescribeRdsDbInstances",
        "DescribeServiceErrors",
        "DescribeStackProvisioningParameters",
        "DescribeStackSummary",
        "DescribeStacks",
        "DescribeTimeBasedAutoScaling",
        "DescribeUserProfiles",
        "DescribeVolumes",
        "DetachElasticLoadBalancer",
        "DisassociateElasticIp",
        "GetHostnameSuggestion",
        "GrantAccess",
        "ListTags",
        "RebootInstance",
        "RegisterEcsCluster",
        "RegisterElasticIp",
        "RegisterInstance",
        "RegisterRdsDbInstance",
        "RegisterVolume",
        "SetLoadBasedAutoScaling",
        "SetPermission",
        "SetTimeBasedAutoScaling",
        "StartInstance",
        "StartStack",
        "StopInstance",
        "StopStack",
        "TagResource",
        "UnassignInstance",
        "UnassignVolume",
        "UntagResource",
        "UpdateApp",
        "UpdateElasticIp",
        "UpdateInstance",
        "UpdateLayer",
        "UpdateMyUserProfile",
        "UpdateRdsDbInstance",
        "UpdateStack",
        "UpdateUserProfile",
        "UpdateVolume"
      ],
      "HasResource": false,
      "StringPrefix": "opsworks"
    },
    "AWS OpsWorks Configuration Management": {
      "ARNFormat": "arn:aws:opsworks-cm:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cid\u003e",
      "ARNRegex": "^arn:aws:opsworks-cm:.+:[0-9]+:.+",
      "Actions": [
        "AssociateNode",
        "CreateBackup",
        "CreateServer",
        "DeleteBackup",
        "DeleteServer",
        "DescribeAccountAttributes",
        "DescribeBackups",
        "DescribeEvents",
        "DescribeNodeAssociationStatus",
        "DescribeServers",
        "DisassociateNode",
        "RestoreServer",
        "StartMaintenance",
        "UpdateServer",
        "UpdateServerEngineAttributes"
      ],
      "HasResource": false,
      "StringPrefix": "opsworks-cm"
    },
    "AWS Organizations": {
      "ARNFormat": "arn:aws:organizations::\u003cmasterAccountId\u003e:\u003cresource\u003e/o-\u003corganizationId\u003e(/\u003cresourceType\u003e/\u003cresourceId\u003e)?",
      "ARNRegex": "^arn:aws:organizations::.+:.+",
      "Actions": [
        "AcceptHandshake",
        "AttachPolicy",
        "CancelHandshake",
        "CreateAccount",
        "CreateOrganization",
        "CreateOrganizationalUnit",
        "CreatePolicy",
        "DeclineHandshake",
        "DeleteOrganization",
        "DeleteOrganizationalUnit",
        "DeletePolicy",
        "DescribeAccount",
        "DescribeCreateAccountStatus",
        "DescribeHandshake",
        "DescribeOrganization",
        "DescribeOrganizationalUnit",
        "DescribePolicy",
        "DetachPolicy",
        "DisableAWSServiceAccess",
        "DisablePolicyType",
        "EnableAWSServiceAccess",
        "EnableAllFeatures",
        "EnablePolicyType",
        "InviteAccountToOrganization",
        "LeaveOrganization",
        "ListAWSServiceAccessForOrganization",
        "ListAccounts",
        "ListAccountsForParent",
        "ListChildren",
        "ListCreateAccountStatus",
        "ListHandshakesForAccount",
        "ListHandshakesForOrganization",
        "ListOrganizationalUnitsForParent",
        "ListParents",
        "ListPolicies",
        "ListPoliciesForTarget",
        "ListRoots",
        "ListTargetsForPolicy",
        "MoveAccount",
        "RemoveAccountFromOrganization",
        "UpdateOrganizationalUnit",
        "UpdatePolicy"
      ],
      "HasResource": true,
      "StringPrefix": "organizations",
      "conditionKeys": [
        "organizations:ServicePrincipal"
      ]
    },
    "AWS Performance Insights": {
      "ARNFormat": "arn:aws:pi:\u003cregion\u003e:\u003caccount\u003e:\u003cresource-type\u003e/\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:pi:.+",
      "Actions": [
        "DescribeDimensionKeys",
        "GetResourceMetrics"
      ],
      "HasResource": true,
      "StringPrefix": "pi"
    },
    "AWS Price List": {
      "Actions": [
        "DescribeServices",
        "GetAttributeValues",
        "GetProducts"
      ],
      "HasResource": false,
      "StringPrefix": "pricing"
    },
    "AWS Resource Groups": {
      "ARNFormat": "arn:aws:\u003cserviceName\u003e:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceName\u003e",
      "ARNRegex": "^arn:aws:resource-groups:.+",
      "Actions": [
        "CreateGroup",
        "DeleteGroup",
        "GetGroup",
        "GetGroupQuery",
        "GetTags",
        "ListGroupResources",
        "ListGroups",
        "SearchResources",
        "Tag",
        "Untag",
        "UpdateGroup",
        "UpdateGroupQuery"
      ],
      "HasResource": true,
      "StringPrefix": "resource-groups"
    },
    "AWS Secrets Manager": {
      "ARNFormat": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
      "ARNRegex": "^arn:${Partition}:secretsmanager:.+",
      "Actions": [
        "CancelRotateSecret",
        "CreateSecret",
        "DeleteResourcePolicy",
        "DeleteSecret",
        "DescribeSecret",
        "GetRandomPassword",
        "GetResourcePolicy",
        "GetSecretValue",
        "ListSecretVersionIds",
        "ListSecrets",
        "PutResourcePolicy",
        "PutSecretValue",
        "RestoreSecret",
        "RotateSecret",
        "TagResource",
        "UntagResource",
        "UpdateSecret",
        "UpdateSecretVersionStage"
      ],
      "HasResource": true,
      "StringPrefix": "secretsmanager",
      "conditionKeys": [
        "aws:RequestTag/tag-key",
        "aws:TagKeys",
        "secretsmanager:Description",
        "secretsmanager:KmsKeyId",
        "secretsmanager:Name",
        "secretsmanager:RotationLambdaARN",
        "secretsmanager:SecretId",
        "secretsmanager:VersionId",
        "secretsmanager:VersionStage",
        "secretsmanager:resource/AllowRotationLambdaArn"
      ]
    },
    "AWS Security Token Service": {
      "ARNFormat": "arn:aws:iam::\u003cnamespace\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:iam::.+",
      "Actions": [
        "AssumeRole",
        "AssumeRoleWithSAML",
        "AssumeRoleWithWebIdentity",
        "DecodeAuthorizationMessage",
        "GetCallerIdentity",
        "GetFederationToken"
      ],
      "HasResource": true,
      "StringPrefix": "sts",
      "conditionKeys": [
        "\u003cweb-identity-provider\u003e:aud",
        "\u003cweb-identity-provider\u003e:oaud",
        "\u003cweb-identity-provider\u003e:sub",
        "aws:FederatedProvider",
        "saml:aud",
        "saml:cn",
        "saml:commonName",
        "saml:doc",
        "saml:eduorghomepageuri",
        "saml:eduorgidentityauthnpolicyuri",
        "saml:eduorglegalname",
        "saml:eduorgsuperioruri",
        "saml:eduorgwhitepagesuri",
        "saml:edupersonaffiliation",
        "saml:edupersonassurance",
        "saml:edupersonentitlement",
        "saml:edupersonnickname",
        "saml:edupersonorgdn",
        "saml:edupersonorgunitdn",
        "saml:edupersonprimaryaffiliation",
        "saml:edupersonprimaryorgunitdn",
        "saml:edupersonprincipalname",
        "saml:edupersonscopedaffiliation",
        "saml:edupersontargetedid",
        "saml:givenName",
        "saml:iss",
        "saml:mail",
        "saml:name",
        "saml:namequalifier",
        "saml:organizationStatus",
        "saml:primaryGroupSID",
        "saml:sub",
        "saml:sub_type",
        "saml:surname",
        "saml:uid",
        "saml:x500UniqueIdentifier",
        "sts:ExternalId"
      ]
    },
    "AWS Serverless Application Repository": {
      "ARNFormat": "arn:aws:serverlessrepo:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource-type\u003e/\u003cresource_name\u003e",
      "ARNRegex": "^arn:aws:serverlessrepo:.+:.+:.+",
      "Actions": [
        "CreateApplication",
        "CreateApplicationVersion",
        "CreateCloudFormationChangeSet",
        "DeleteApplication",
        "GetApplication",
        "GetApplicationPolicy",
        "ListApplicationVersions",
        "ListApplications",
        "PutApplicationPolicy",
        "SearchApplications",
        "UpdateApplication"
      ],
      "HasResource": true,
      "StringPrefix": "serverlessrepo"
    },
    "AWS Service Catalog": {
      "ARNFormat": "arn:aws:(catalog|servicecatalog):\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cid\u003e",
      "ARNRegex": "^arn:aws:(catalog|servicecatalog):.+",
      "Actions": [
        "AcceptPortfolioShare",
        "AssociatePrincipalWithPortfolio",
        "AssociateProductWithPortfolio",
        "CreateConstraint",
        "CreatePortfolio",
        "CreatePortfolioShare",
        "CreateProduct",
        "CreateProvisioningArtifact",
        "DeleteConstraint",
        "DeletePortfolio",
        "DeletePortfolioShare",
        "DeleteProduct",
        "DeleteProvisioningArtifact",
        "DescribeConstraint",
        "DescribePortfolio",
        "DescribeProduct",
        "DescribeProductAsAdmin",
        "DescribeProductView",
        "DescribeProvisioningArtifact",
        "DescribeProvisioningParameters",
        "DescribeRecord",
        "DisassociatePrincipalFromPortfolio",
        "DisassociateProductFromPortfolio",
        "ListAcceptedPortfolioShares",
        "ListConstraintsForPortfolio",
        "ListLaunchPaths",
        "ListPortfolioAccess",
        "ListPortfolios",
        "ListPortfoliosForProduct",
        "ListPrincipalsForPortfolio",
        "ListProvisioningArtifacts",
        "ListRecordHistory",
        "ProvisionProduct",
        "RejectPortfolioShare",
        "ScanProvisionedProducts",
        "SearchProducts",
        "SearchProductsAsAdmin",
        "TerminateProvisionedProduct",
        "UpdateConstraint",
        "UpdatePortfolio",
        "UpdateProduct",
        "UpdateProvisionedProduct",
        "UpdateProvisioningArtifact"
      ],
      "HasResource": false,
      "StringPrefix": "servicecatalog",
      "conditionKeys": [
        "servicecatalog:accountLevel",
        "servicecatalog:roleLevel",
        "servicecatalog:userLevel"
      ]
    },
    "AWS Shield": {
      "ARNFormat": "arn:aws:shield::\u003caccount_ID\u003e:\u003cresource\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:shield::[0-9]+:.+/.+",
      "Actions": [
        "CreateProtection",
        "CreateSubscription",
        "DeleteProtection",
        "DeleteSubscription",
        "DescribeAttack",
        "DescribeProtection",
        "DescribeSubscription",
        "ListAttacks",
        "ListProtections"
      ],
      "HasResource": true,
      "StringPrefix": "shield"
    },
    "AWS Snowball": {
      "Actions": [
        "CancelCluster",
        "CancelJob",
        "CreateAddress",
        "CreateCluster",
        "CreateJob",
        "DescribeAddress",
        "DescribeAddresses",
        "DescribeCluster",
        "DescribeJob",
        "GetJobManifest",
        "GetJobUnlockCode",
        "GetSnowballUsage",
        "ListClusterJobs",
        "ListClusters",
        "ListJobs",
        "UpdateCluster",
        "UpdateJob"
      ],
      "HasResource": false,
      "StringPrefix": "snowball"
    },
    "AWS Step Functions": {
      "ARNFormat": "arn:aws:\u003cserviceName\u003e:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e:\u003cresourceName\u003e",
      "ARNRegex": "^arn:aws:states:.+",
      "Actions": [
        "CreateActivity",
        "CreateStateMachine",
        "DeleteActivity",
        "DeleteStateMachine",
        "DescribeActivity",
        "DescribeExecution",
        "DescribeStateMachine",
        "DescribeStateMachineForExecution",
        "GetActivityTask",
        "GetExecutionHistory",
        "ListActivities",
        "ListExecutions",
        "ListStateMachines",
        "SendTaskFailure",
        "SendTaskHeartbeat",
        "SendTaskSuccess",
        "StartExecution",
        "StopExecution",
        "UpdateStateMachine"
      ],
      "HasResource": true,
      "StringPrefix": "states"
    },
    "AWS Support": {
      "Actions": [
        "AddAttachmentsToSet",
        "AddCommunicationToCase",
        "CreateCase",
        "DescribeAttachment",
        "DescribeCases",
        "DescribeCommunications",
        "DescribeServices",
        "DescribeSeverityLevels",
        "DescribeTrustedAdvisorCheckRefreshStatuses",
        "DescribeTrustedAdvisorCheckResult",
        "DescribeTrustedAdvisorCheckSummaries",
        "DescribeTrustedAdvisorChecks",
        "RefreshTrustedAdvisorCheck",
        "ResolveCase"
      ],
      "HasResource": false,
      "StringPrefix": "support"
    },
    "AWS Trusted Advisor": {
      "ARNFormat": "arn:aws:trustedadvisor:*:\u003caccount_ID\u003e:checks/{category}/{checkId}",
      "ARNRegex": "arn:aws:trustedadvisor:*",
      "Actions": [
        "DescribeCheckItems",
        "DescribeCheckRefreshStatuses",
        "DescribeCheckSummaries",
        "DescribeNotificationPreferences",
        "ExcludeCheckItems",
        "IncludeCheckItems",
        "RefreshCheck",
        "UpdateNotificationPreferences"
      ],
      "HasResource": true,
      "StringPrefix": "trustedadvisor"
    },
    "AWS WAF": {
      "ARNFormat": "arn:aws:waf::\u003caccount_ID\u003e:\u003cresource\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:waf::[0-9]+:.+/.+",
      "Actions": [
        "CreateByteMatchSet",
        "CreateGeoMatchSet",
        "CreateIPSet",
        "CreateRateBasedRule",
        "CreateRegexMatchSet",
        "CreateRegexPatternSet",
        "CreateRule",
        "CreateRuleGroup",
        "CreateSizeConstraintSet",
        "CreateSqlInjectionMatchSet",
        "CreateWebACL",
        "CreateXssMatchSet",
        "DeleteByteMatchSet",
        "DeleteGeoMatchSet",
        "DeleteIPSet",
        "DeletePermissionPolicy",
        "DeleteRateBasedRule",
        "DeleteRegexMatchSet",
        "DeleteRegexPatternSet",
        "DeleteRule",
        "DeleteRuleGroup",
        "DeleteSizeConstraintSet",
        "DeleteSqlInjectionMatchSet",
        "DeleteWebACL",
        "DeleteXssMatchSet",
        "GetByteMatchSet",
        "GetChangeToken",
        "GetChangeTokenStatus",
        "GetGeoMatchSet",
        "GetIPSet",
        "GetPermissionPolicy",
        "GetRateBasedRule",
        "GetRateBasedRuleManagedKeys",
        "GetRegexMatchSet",
        "GetRegexPatternSet",
        "GetRule",
        "GetRuleGroup",
        "GetSampledRequests",
        "GetSizeConstraintSet",
        "GetSqlInjectionMatchSet",
        "GetWebACL",
        "GetXssMatchSet",
        "ListActivatedRulesInRuleGroup",
        "ListByteMatchSets",
        "ListGeoMatchSets",
        "ListIPSets",
        "ListRateBasedRules",
        "ListRegexMatchSets",
        "ListRegexPatternSets",
        "ListRuleGroups",
        "ListRules",
        "ListSizeConstraintSets",
        "ListSqlInjectionMatchSets",
        "ListSubscribedRuleGroups",
        "ListWebACLs",
        "ListXssMatchSets",
        "PutPermissionPolicy",
        "UpdateByteMatchSet",
        "UpdateGeoMatchSet",
        "UpdateIPSet",
        "UpdateRateBasedRule",
        "UpdateRegexMatchSet",
        "UpdateRegexPatternSet",
        "UpdateRule",
        "UpdateRuleGroup",
        "UpdateSizeConstraintSet",
        "UpdateSqlInjectionMatchSet",
        "UpdateWebACL",
        "UpdateXssMatchSet"
      ],
      "HasResource": true,
      "StringPrefix": "waf"
    },
    "AWS WAF Regional": {
      "ARNFormat": "arn:aws:waf-regional:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:waf-regional:.+:[0-9]+:.+/.+",
      "Actions": [
        "AssociateWebACL",
        "CreateByteMatchSet",
        "CreateGeoMatchSet",
        "CreateIPSet",
        "CreateRateBasedRule",
        "CreateRegexMatchSet",
        "CreateRegexPatternSet",
        "CreateRule",
        "CreateRuleGroup",
        "CreateSizeConstraintSet",
        "CreateSqlInjectionMatchSet",
        "CreateWebACL",
        "CreateXssMatchSet",
        "DeleteByteMatchSet",
        "DeleteGeoMatchSet",
        "DeleteIPSet",
        "DeletePermissionPolicy",
        "DeleteRateBasedRule",
        "DeleteRegexMatchSet",
        "DeleteRegexPatternSet",
        "DeleteRule",
        "DeleteRuleGroup",
        "DeleteSizeConstraintSet",
        "DeleteSqlInjectionMatchSet",
        "DeleteWebACL",
        "DeleteXssMatchSet",
        "DisassociateWebACL",
        "GetByteMatchSet",
        "GetChangeToken",
        "GetChangeTokenStatus",
        "GetGeoMatchSet",
        "GetIPSet",
        "GetPermissionPolicy",
        "GetRateBasedRule",
        "GetRateBasedRuleManagedKeys",
        "GetRegexMatchSet",
        "GetRegexPatternSet",
        "GetRule",
        "GetRuleGroup",
        "GetSampledRequests",
        "GetSizeConstraintSet",
        "GetSqlInjectionMatchSet",
        "GetWebACL",
        "GetWebACLForResource",
        "GetXssMatchSet",
        "ListActivatedRulesInRuleGroup",
        "ListByteMatchSets",
        "ListGeoMatchSets",
        "ListIPSets",
        "ListRateBasedRules",
        "ListRegexMatchSets",
        "ListRegexPatternSets",
        "ListResourcesForWebACL",
        "ListRuleGroups",
        "ListRules",
        "ListSizeConstraintSets",
        "ListSqlInjectionMatchSets",
        "ListSubscribedRuleGroups",
        "ListWebACLs",
        "ListXssMatchSets",
        "PutPermissionPolicy",
        "UpdateByteMatchSet",
        "UpdateGeoMatchSet",
        "UpdateIPSet",
        "UpdateRateBasedRule",
        "UpdateRegexMatchSet",
        "UpdateRegexPatternSet",
        "UpdateRule",
        "UpdateRuleGroup",
        "UpdateSizeConstraintSet",
        "UpdateSqlInjectionMatchSet",
        "UpdateWebACL",
        "UpdateXssMatchSet"
      ],
      "HasResource": true,
      "StringPrefix": "waf-regional"
    },
    "AWS XRay": {
      "Actions": [
        "BatchGetTraces",
        "GetServiceGraph",
        "GetTraceGraph",
        "GetTraceSummaries",
        "PutTelemetryRecords",
        "PutTraceSegments"
      ],
      "HasResource": false,
      "StringPrefix": "xray"
    },
    "Alexa for Business": {
      "ARNFormat": "arn:aws:a4b:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource-type\u003e/\u003cresource_id\u003e",
      "ARNRegex": "^arn:aws:a4b:.+:.+:.+",
      "Actions": [
        "AssociateDeviceWithRoom",
        "AssociateSkillGroupWithRoom",
        "CreateProfile",
        "CreateRoom",
        "CreateSkillGroup",
        "CreateUser",
        "DeleteProfile",
        "DeleteRoom",
        "DeleteRoomSkillParameter",
        "DeleteSkillGroup",
        "DeleteUser",
        "DisassociateDeviceFromRoom",
        "DisassociateSkillGroupFromRoom",
        "GetDevice",
        "GetProfile",
        "GetRoom",
        "GetRoomSkillParameter",
        "GetSkillGroup",
        "ListSkills",
        "ListTags",
        "PutRoomSkillParameter",
        "ResolveRoom",
        "RevokeInvitation",
        "SearchDevices",
        "SearchProfiles",
        "SearchRooms",
        "SearchSkillGroups",
        "SearchUsers",
        "SendInvitation",
        "StartDeviceSync",
        "TagResource",
        "UntagResource",
        "UpdateDevice",
        "UpdateProfile",
        "UpdateRoom",
        "UpdateSkillGroup"
      ],
      "HasResource": true,
      "StringPrefix": "a4b"
    },
    "Amazon API Gateway": {
      "ARNFormat": "arn:aws:execute-api:\u003cregion\u003e:\u003caccount_id\u003e:\u003capi_id\u003e/\u003cstage\u003e/\u003cmethod\u003e/\u003capi_specific_resource_path\u003e",
      "ARNRegex": "^arn:aws:execute-api:.+",
      "Actions": [
        "InvalidateCache",
        "Invoke"
      ],
      "HasResource": true,
      "StringPrefix": "execute-api"
    },
    "Amazon AppStream": {
      "ARNFormat": "arn:aws:appstream:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e",
      "ARNRegex": "^arn:aws:appstream:.+",
      "Actions": [
        "AssociateFleet",
        "CreateDirectoryConfig",
        "CreateFleet",
        "CreateImageBuilder",
        "CreateImageBuilderStreamingURL",
        "CreateStack",
        "CreateStreamingURL",
        "DeleteDirectoryConfig",
        "DeleteFleet",
        "DeleteImage",
        "DeleteImageBuilder",
        "DeleteStack",
        "DescribeDirectoryConfigs",
        "DescribeFleets",
        "DescribeImageBuilders",
        "DescribeImages",
        "DescribeSessions",
        "DescribeStacks",
        "DisassociateFleet",
        "ExpireSession",
        "ListAssociatedFleets",
        "ListAssociatedStacks",
        "ListTagsForResource",
        "StartFleet",
        "StartImageBuilder",
        "StopFleet",
        "StopImageBuilder",
        "Stream",
        "TagResource",
        "UntagResource",
        "UpdateDirectoryConfig",
        "UpdateFleet",
        "UpdateStack"
      ],
      "HasResource": true,
      "StringPrefix": "appstream",
      "conditionKeys": [
        "appstream:userId"
      ]
    },
    "Amazon Athena": {
      "Actions": [
        "BatchGetNamedQuery",
        "BatchGetQueryExecution",
        "CancelQueryExecution",
        "CreateNamedQuery",
        "DeleteNamedQuery",
        "GetCatalogs",
        "GetExecutionEngine",
        "GetExecutionEngines",
        "GetNamedQuery",
        "GetNamespace",
        "GetNamespaces",
        "GetQueryExecution",
        "GetQueryExecutions",
        "GetQueryResults",
        "GetTable",
        "GetTables",
        "ListNamedQueries",
        "ListQueryExecutions",
        "RunQuery",
        "StartQueryExecution",
        "StopQueryExecution"
      ],
      "HasResource": false,
      "StringPrefix": "athena"
    },
    "Amazon Chime": {
      "Actions": [
        "AcceptDelegate",
        "ActivateUsers",
        "AddDomain",
        "AddOrUpdateGroups",
        "AuthorizeDirectory",
        "ConnectDirectory",
        "CreateAccount",
        "CreateCDRBucket",
        "DeleteAccount",
        "DeleteCDRBucket",
        "DeleteDelegate",
        "DeleteDomain",
        "DeleteGroups",
        "DisconnectDirectory",
        "GetAccount",
        "GetAccountResource",
        "GetAccountSettings",
        "GetCDRBucket",
        "GetDomain",
        "GetMeetingDetail",
        "GetUser",
        "GetUserActivityReportData",
        "GetUserByEmail",
        "InviteDelegate",
        "InviteUsers",
        "ListAccountUsageReportData",
        "ListAccounts",
        "ListCDRBucket",
        "ListDelegates",
        "ListDirectories",
        "ListDomains",
        "ListGroups",
        "ListMeetingEvents",
        "ListMeetingsReportData",
        "ListUsers",
        "LogoutUser",
        "RenameAccount",
        "RenewDelegate",
        "ResetAccountResource",
        "ResetPersonalPin",
        "RetrieveDataExports",
        "StartDataExport",
        "SubmitSupportRequest",
        "SuspendUsers",
        "UnauthorizeDirectory",
        "UpdateAccountResource",
        "UpdateAccountSettings",
        "UpdateCDRBucket",
        "UpdateSupportedLicenses",
        "UpdateUserLicenses",
        "ValidateAccountResource"
      ],
      "HasResource": false,
      "StringPrefix": "chime"
    },
    "Amazon Cloud Directory": {
      "ARNFormat": "arn:aws:clouddirectory:\u003cregion\u003e:\u003caccountId\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:${Partition}:clouddirectory:.+:[0-9]+:(directory|schema)/.+",
      "Actions": [
        "AddFacetToObject",
        "ApplySchema",
        "AttachObject",
        "AttachPolicy",
        "AttachToIndex",
        "AttachTypedLink",
        "BatchRead",
        "BatchWrite",
        "CreateDirectory",
        "CreateFacet",
        "CreateIndex",
        "CreateObject",
        "CreateSchema",
        "CreateTypedLinkFacet",
        "DeleteDirectory",
        "DeleteFacet",
        "DeleteObject",
        "DeleteSchema",
        "DeleteTypedLinkFacet",
        "DetachFromIndex",
        "DetachObject",
        "DetachPolicy",
        "DetachTypedLink",
        "DisableDirectory",
        "EnableDirectory",
        "GetDirectory",
        "GetFacet",
        "GetLinkAttributes",
        "GetObjectAttributes",
        "GetObjectInformation",
        "GetSchemaAsJson",
        "GetTypedLinkFacetInformation",
        "ListAppliedSchemaArns",
        "ListAttachedIndices",
        "ListDevelopmentSchemaArns",
        "ListDirectories",
        "ListFacetAttributes",
        "ListFacetNames",
        "ListIncomingTypedLinks",
        "ListIndex",
        "ListObjectAttributes",
        "ListObjectChildren",
        "ListObjectParentPaths",
        "ListObjectParents",
        "ListObjectPolicies",
        "ListOutgoingTypedLinks",
        "ListPolicyAttachments",
        "ListPublishedSchemaArns",
        "ListTagsForResource",
        "ListTypedLinkFacetAttributes",
        "ListTypedLinkFacetNames",
        "LookupPolicy",
        "PublishSchema",
        "PutSchemaFromJson",
        "RemoveFacetFromObject",
        "TagResource",
        "UntagResource",
        "UpdateFacet",
        "UpdateLinkAttributes",
        "UpdateObjectAttributes",
        "UpdateSchema",
        "UpdateTypedLinkFacet"
      ],
      "HasResource": true,
      "StringPrefix": "clouddirectory"
    },
    "Amazon CloudFront": {
      "Actions": [
        "CreateCloudFrontOriginAccessIdentity",
        "CreateDistribution",
        "CreateDistributionWithTags",
        "CreateInvalidation",
        "CreateStreamingDistribution",
        "CreateStreamingDistributionWithTags",
        "DeleteCloudFrontOriginAccessIdentity",
        "DeleteDistribution",
        "DeleteStreamingDistribution",
        "GetCloudFrontOriginAccessIdentity",
        "GetCloudFrontOriginAccessIdentityConfig",
        "GetDistribution",
        "GetDistributionConfig",
        "GetInvalidation",
        "GetStreamingDistribution",
        "GetStreamingDistributionConfig",
        "ListCloudFrontOriginAccessIdentities",
        "ListDistributions",
        "ListDistributionsByWebACLId",
        "ListInvalidations",
        "ListStreamingDistributions",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateCloudFrontOriginAccessIdentity",
        "UpdateDistribution",
        "UpdateStreamingDistribution"
      ],
      "HasResource": false,
      "StringPrefix": "cloudfront"
    },
    "Amazon CloudSearch": {
      "ARNFormat": "arn:aws:cloudsearch:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceName\u003e",
      "ARNRegex": "^arn:aws:cloudsearch:.+:.+:.+",
      "Actions": [
        "AddTags",
        "BuildSuggesters",
        "CreateDomain",
        "DefineAnalysisScheme",
        "DefineExpression",
        "DefineIndexField",
        "DefineSuggester",
        "DeleteAnalysisScheme",
        "DeleteDomain",
        "DeleteExpression",
        "DeleteIndexField",
        "DeleteSuggester",
        "DescribeAnalysisSchemes",
        "DescribeAvailabilityOptions",
        "DescribeDomains",
        "DescribeExpressions",
        "DescribeIndexFields",
        "DescribeScalingParameters",
        "DescribeServiceAccessPolicies",
        "DescribeSuggesters",
        "IndexDocuments",
        "ListDomainNames",
        "ListTags",
        "RemoveTags",
        "UpdateAvailabilityOptions",
        "UpdateScalingParameters",
        "UpdateServiceAccessPolicies",
        "document",
        "search",
        "suggest"
      ],
      "HasResource": true,
      "StringPrefix": "cloudsearch"
    },
    "Amazon CloudWatch": {
      "Actions": [
        "DeleteAlarms",
        "DeleteDashboards",
        "DescribeAlarmHistory",
        "DescribeAlarms",
        "DescribeAlarmsForMetric",
        "DisableAlarmActions",
        "EnableAlarmActions",
        "GetDashboard",
        "GetMetricData",
        "GetMetricStatistics",
        "ListDashboards",
        "ListMetrics",
        "PutDashboard",
        "PutMetricAlarm",
        "PutMetricData",
        "SetAlarmState"
      ],
      "HasResource": false,
      "StringPrefix": "cloudwatch"
    },
    "Amazon CloudWatch Events": {
      "ARNFormat": "arn:aws:\u003cserviceName\u003e:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceName\u003e",
      "ARNRegex": "^arn:aws:events:.+",
      "Actions": [
        "DeleteRule",
        "DescribeEventBus",
        "DescribeRule",
        "DisableRule",
        "EnableRule",
        "ListRuleNamesByTarget",
        "ListRules",
        "ListTargetsByRule",
        "PutEvents",
        "PutPermission",
        "PutRule",
        "PutTargets",
        "RemovePermission",
        "RemoveTargets",
        "TestEventPattern"
      ],
      "HasResource": true,
      "StringPrefix": "events",
      "conditionKeys": [
        "events:TargetArn",
        "events:detail-type",
        "events:detail.userIdentity.principalId",
        "events:source"
      ]
    },
    "Amazon CloudWatch Logs": {
      "ARNFormat": "arn:aws:logs:.+:.+:.+",
      "ARNRegex": "^arn:aws:logs:.+",
      "Actions": [
        "AssociateKmsKey",
        "CancelExportTask",
        "CreateExportTask",
        "CreateLogGroup",
        "CreateLogStream",
        "DeleteDestination",
        "DeleteLogGroup",
        "DeleteLogStream",
        "DeleteMetricFilter",
        "DeleteResourcePolicy",
        "DeleteRetentionPolicy",
        "DeleteSubscriptionFilter",
        "DescribeDestinations",
        "DescribeExportTasks",
        "DescribeLogGroups",
        "DescribeLogStreams",
        "DescribeMetricFilters",
        "DescribeResourcePolicies",
        "DescribeSubscriptionFilters",
        "DisassociateKmsKey",
        "FilterLogEvents",
        "GetLogEvents",
        "ListTagsLogGroup",
        "PutDestination",
        "PutDestinationPolicy",
        "PutLogEvents",
        "PutMetricFilter",
        "PutResourcePolicy",
        "PutRetentionPolicy",
        "PutSubscriptionFilter",
        "TagLogGroup",
        "TestMetricFilter",
        "UntagLogGroup"
      ],
      "HasResource": true,
      "StringPrefix": "logs"
    },
    "Amazon Cognito Identity": {
      "ARNFormat": "arn:aws:cognito-identity:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e",
      "ARNRegex": "^arn:aws:cognito-identity:.+",
      "Actions": [
        "CreateIdentityPool",
        "DeleteIdentities",
        "DeleteIdentityPool",
        "DescribeIdentity",
        "DescribeIdentityPool",
        "GetCredentialsForIdentity",
        "GetId",
        "GetIdentityPoolRoles",
        "GetOpenIdToken",
        "GetOpenIdTokenForDeveloperIdentity",
        "ListIdentities",
        "ListIdentityPools",
        "LookupDeveloperIdentity",
        "MergeDeveloperIdentities",
        "SetIdentityPoolRoles",
        "UnlinkDeveloperIdentity",
        "UnlinkIdentity",
        "UpdateIdentityPool"
      ],
      "HasResource": true,
      "StringPrefix": "cognito-identity"
    },
    "Amazon Cognito Sync": {
      "ARNFormat": "arn:aws:cognito-sync:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e:",
      "ARNRegex": "^arn:aws:cognito-sync:.+",
      "Actions": [
        "BulkPublish",
        "DeleteDataset",
        "DescribeDataset",
        "DescribeIdentityPoolUsage",
        "DescribeIdentityUsage",
        "GetBulkPublishDetails",
        "GetCognitoEvents",
        "GetIdentityPoolConfiguration",
        "ListDatasets",
        "ListIdentityPoolUsage",
        "ListRecords",
        "QueryRecords",
        "RegisterDevice",
        "SetCognitoEvents",
        "SetDatasetConfiguration",
        "SetIdentityPoolConfiguration",
        "SubscribeToDataset",
        "UnsubscribeFromDataset",
        "UpdateRecords"
      ],
      "HasResource": true,
      "StringPrefix": "cognito-sync"
    },
    "Amazon Cognito User Pools": {
      "ARNFormat": "arn:aws:cognito-idp:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e:",
      "ARNRegex": "^arn:aws:cognito-idp:.+",
      "Actions": [
        "AddCustomAttributes",
        "AdminAddUserToGroup",
        "AdminConfirmSignUp",
        "AdminCreateUser",
        "AdminDeleteUser",
        "AdminDeleteUserAttributes",
        "AdminDisableUser",
        "AdminEnableUser",
        "AdminForgetDevice",
        "AdminGetDevice",
        "AdminGetUser",
        "AdminInitiateAuth",
        "AdminListDevices",
        "AdminListGroupsForUser",
        "AdminListUserAuthEvents",
        "AdminRemoveUserFromGroup",
        "AdminResetUserPassword",
        "AdminRespondToAuthChallenge",
        "AdminSetUserMFAPreference",
        "AdminSetUserSettings",
        "AdminUpdateAuthEventFeedback",
        "AdminUpdateDeviceStatus",
        "AdminUpdateUserAttributes",
        "AdminUserGlobalSignOut",
        "ChangePassword",
        "ConfirmDevice",
        "ConfirmForgotPassword",
        "ConfirmSignUp",
        "CreateGroup",
        "CreateUserImportJob",
        "CreateUserPool",
        "CreateUserPoolClient",
        "DeleteGroup",
        "DeleteUser",
        "DeleteUserAttributes",
        "DeleteUserPool",
        "DeleteUserPoolClient",
        "DescribeRiskConfiguration",
        "DescribeUserImportJob",
        "DescribeUserPool",
        "DescribeUserPoolClient",
        "ForgetDevice",
        "ForgotPassword",
        "GetCSVHeader",
        "GetDevice",
        "GetGroup",
        "GetUser",
        "GetUserAttributeVerificationCode",
        "GetUserPoolMfaConfig",
        "GlobalSignOut",
        "InitiateAuth",
        "ListDevices",
        "ListGroups",
        "ListUserImportJobs",
        "ListUserPoolClients",
        "ListUserPools",
        "ListUsers",
        "ListUsersInGroup",
        "ResendConfirmationCode",
        "RespondToAuthChallenge",
        "SetRiskConfiguration",
        "SetUserMFAPreference",
        "SetUserPoolMfaConfig",
        "SetUserSettings",
        "SignUp",
        "StartUserImportJob",
        "StopUserImportJob",
        "UpdateAuthEventFeedback",
        "UpdateDeviceStatus",
        "UpdateGroup",
        "UpdateUserAttributes",
        "UpdateUserPool",
        "UpdateUserPoolClient",
        "VerifyUserAttribute"
      ],
      "HasResource": true,
      "StringPrefix": "cognito-idp"
    },
    "Amazon Comprehend": {
      "ARNFormat": "arn:${Partition}:comprehend:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:comprehend:.+:.+:.+",
      "Actions": [
        "BatchDetectDominantLanguage",
        "BatchDetectEntities",
        "BatchDetectKeyPhrases",
        "BatchDetectSentiment",
        "BatchDetectSyntax",
        "DescribeDominantLanguageDetectionJob",
        "DescribeEntitiesDetectionJob",
        "DescribeKeyPhrasesDetectionJob",
        "DescribeSentimentDetectionJob",
        "DescribeTopicsDetectionJob",
        "DetectDominantLanguage",
        "DetectEntities",
        "DetectKeyPhrases",
        "DetectSentiment",
        "DetectSyntax",
        "ListDominantLanguageDetectionJobs",
        "ListEntitiesDetectionJobs",
        "ListKeyPhrasesDetectionJobs",
        "ListSentimentDetectionJobs",
        "ListTopicsDetectionJobs",
        "StartDominantLanguageDetectionJob",
        "StartEntitiesDetectionJob",
        "StartKeyPhrasesDetectionJob",
        "StartSentimentDetectionJob",
        "StartTopicsDetectionJob",
        "StopDominantLanguageDetectionJob",
        "StopEntitiesDetectionJob",
        "StopKeyPhrasesDetectionJob",
        "StopSentimentDetectionJob"
      ],
      "HasResource": false,
      "StringPrefix": "comprehend"
    },
    "Amazon Connect": {
      "ARNFormat": "arn:${Partition}:connect",
      "ARNRegex": "^arn:${Partition}:connect:.+",
      "Actions": [
        "CreateInstance",
        "DescribeInstance",
        "DestroyInstance",
        "GetFederationToken",
        "GetFederationTokens",
        "ListInstances",
        "ModifyInstance",
        "StartOutboundVoiceContact",
        "StopContact"
      ],
      "HasResource": true,
      "StringPrefix": "connect"
    },
    "Amazon Data Lifecycle Manager": {
      "ARNFormat": "arn:${Partition}:dlm:\u003cregion\u003e:\u003caccount-id\u003e:policy/\u003cresource_name\u003e",
      "ARNRegex": "^arn:${Partition}:dlm:.+:.+:.+",
      "Actions": [
        "CreateLifecyclePolicy",
        "DeleteLifecyclePolicy",
        "GetLifecyclePolicies",
        "GetLifecyclePolicy",
        "UpdateLifecyclePolicy"
      ],
      "HasResource": true,
      "StringPrefix": "dlm"
    },
    "Amazon DynamoDB": {
      "ARNFormat": "arn:aws:dynamodb:\u003cregion\u003e:\u003caccountID\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e",
      "ARNRegex": "^arn:aws:dynamodb:.+:.+",
      "Actions": [
        "BatchGetItem",
        "BatchWriteItem",
        "CreateBackup",
        "CreateGlobalTable",
        "CreateTable",
        "DeleteBackup",
        "DeleteItem",
        "DeleteTable",
        "DescribeBackup",
        "DescribeContinuousBackups",
        "DescribeGlobalTable",
        "DescribeGlobalTableSettings",
        "DescribeLimits",
        "DescribeReservedCapacity",
        "DescribeReservedCapacityOfferings",
        "DescribeStream",
        "DescribeTable",
        "DescribeTimeToLive",
        "GetItem",
        "GetRecords",
        "GetShardIterator",
        "ListBackups",
        "ListGlobalTables",
        "ListStreams",
        "ListTables",
        "ListTagsOfResource",
        "PurchaseReservedCapacityOfferings",
        "PutItem",
        "Query",
        "RestoreTableFromBackup",
        "RestoreTableToPointInTime",
        "Scan",
        "TagResource",
        "UntagResource",
        "UpdateContinuousBackups",
        "UpdateGlobalTable",
        "UpdateGlobalTableSettings",
        "UpdateItem",
        "UpdateTable",
        "UpdateTimeToLive"
      ],
      "HasResource": true,
      "StringPrefix": "dynamodb",
      "conditionKeys": [
        "dynamodb:Attributes",
        "dynamodb:LeadingKeys",
        "dynamodb:ReturnConsumedCapacity",
        "dynamodb:ReturnValues",
        "dynamodb:Select"
      ]
    },
    "Amazon DynamoDB Accelerator (DAX)": {
      "ARNFormat": "arn:aws:dax:\u003cregion\u003e:\u003caccountId\u003e:cache/\u003cclustername\u003e",
      "ARNRegex": "^arn:aws:dax:.+:[0-9]+:cache/[a-zA-Z0-9_.-]+",
      "Actions": [
        "BatchGetItem",
        "BatchWriteItem",
        "CreateCluster",
        "CreateParameterGroup",
        "CreateSubnetGroup",
        "DecreaseReplicationFactor",
        "DeleteCluster",
        "DeleteItem",
        "DeleteParameterGroup",
        "DeleteSubnetGroup",
        "DescribeClusters",
        "DescribeDefaultParameters",
        "DescribeEvents",
        "DescribeParameterGroups",
        "DescribeParameters",
        "DescribeSubnetGroups",
        "DescribeTable",
        "GetItem",
        "IncreaseReplicationFactor",
        "ListTables",
        "ListTags",
        "PutItem",
        "Query",
        "RebootNode",
        "Scan",
        "TagResource",
        "UntagResource",
        "UpdateCluster",
        "UpdateItem",
        "UpdateParameterGroup",
        "UpdateSubnetGroup"
      ],
      "HasResource": true,
      "StringPrefix": "dax"
    },
    "Amazon EC2": {
      "ARNFormat": "arn:aws:ec2:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourcePath\u003e",
      "ARNRegex": "^arn:aws:ec2:.+",
      "Actions": [
        "AcceptReservedInstancesExchangeQuote",
        "AcceptVpcEndpointConnections",
        "AcceptVpcPeeringConnection",
        "AllocateAddress",
        "AllocateHosts",
        "AssignIpv6Addresses",
        "AssignPrivateIpAddresses",
        "AssociateAddress",
        "AssociateDhcpOptions",
        "AssociateIamInstanceProfile",
        "AssociateRouteTable",
        "AssociateSubnetCidrBlock",
        "AssociateVpcCidrBlock",
        "AttachClassicLinkVpc",
        "AttachInternetGateway",
        "AttachNetworkInterface",
        "AttachVolume",
        "AttachVpnGateway",
        "AuthorizeSecurityGroupEgress",
        "AuthorizeSecurityGroupIngress",
        "BundleInstance",
        "CancelBundleTask",
        "CancelConversionTask",
        "CancelExportTask",
        "CancelImportTask",
        "CancelReservedInstancesListing",
        "CancelSpotFleetRequests",
        "CancelSpotInstanceRequests",
        "ConfirmProductInstance",
        "CopyFpgaImage",
        "CopyImage",
        "CopySnapshot",
        "CreateCustomerGateway",
        "CreateDefaultSubnet",
        "CreateDefaultVpc",
        "CreateDhcpOptions",
        "CreateEgressOnlyInternetGateway",
        "CreateFlowLogs",
        "CreateFpgaImage",
        "CreateImage",
        "CreateInstanceExportTask",
        "CreateInternetGateway",
        "CreateKeyPair",
        "CreateLaunchTemplate",
        "CreateLaunchTemplateVersion",
        "CreateNatGateway",
        "CreateNetworkAcl",
        "CreateNetworkAclEntry",
        "CreateNetworkInterface",
        "CreateNetworkInterfacePermission",
        "CreatePlacementGroup",
        "CreateReservedInstancesListing",
        "CreateRoute",
        "CreateRouteTable",
        "CreateSecurityGroup",
        "CreateSnapshot",
        "CreateSpotDatafeedSubscription",
        "CreateSubnet",
        "CreateTags",
        "CreateVolume",
        "CreateVpc",
        "CreateVpcEndpoint",
        "CreateVpcEndpointConnectionNotification",
        "CreateVpcEndpointServiceConfiguration",
        "CreateVpcPeeringConnection",
        "CreateVpnConnection",
        "CreateVpnConnectionRoute",
        "CreateVpnGateway",
        "DeleteCustomerGateway",
        "DeleteDhcpOptions",
        "DeleteEgressOnlyInternetGateway",
        "DeleteFlowLogs",
        "DeleteFpgaImage",
        "DeleteInternetGateway",
        "DeleteKeyPair",
        "DeleteLaunchTemplate",
        "DeleteLaunchTemplateVersions",
        "DeleteNatGateway",
        "DeleteNetworkAcl",
        "DeleteNetworkAclEntry",
        "DeleteNetworkInterface",
        "DeleteNetworkInterfacePermission",
        "DeletePlacementGroup",
        "DeleteRoute",
        "DeleteRouteTable",
        "DeleteSecurityGroup",
        "DeleteSnapshot",
        "DeleteSpotDatafeedSubscription",
        "DeleteSubnet",
        "DeleteTags",
        "DeleteVolume",
        "DeleteVpc",
        "DeleteVpcEndpointConnectionNotifications",
        "DeleteVpcEndpointServiceConfigurations",
        "DeleteVpcEndpoints",
        "DeleteVpcPeeringConnection",
        "DeleteVpnConnection",
        "DeleteVpnConnectionRoute",
        "DeleteVpnGateway",
        "DeregisterImage",
        "DescribeAccountAttributes",
        "DescribeAddresses",
        "DescribeAvailabilityZones",
        "DescribeBundleTasks",
        "DescribeClassicLinkInstances",
        "DescribeConversionTasks",
        "DescribeCustomerGateways",
        "DescribeDhcpOptions",
        "DescribeEgressOnlyInternetGateways",
        "DescribeElasticGpus",
        "DescribeExportTasks",
        "DescribeFlowLogs",
        "DescribeFpgaImageAttribute",
        "DescribeFpgaImages",
        "DescribeHostReservationOfferings",
        "DescribeHostReservations",
        "DescribeHosts",
        "DescribeIamInstanceProfileAssociations",
        "DescribeIdFormat",
        "DescribeIdentityIdFormat",
        "DescribeImageAttribute",
        "DescribeImages",
        "DescribeImportImageTasks",
        "DescribeImportSnapshotTasks",
        "DescribeInstanceAttribute",
        "DescribeInstanceCreditSpecifications",
        "DescribeInstanceStatus",
        "DescribeInstances",
        "DescribeInternetGateways",
        "DescribeKeyPairs",
        "DescribeLaunchTemplateVersions",
        "DescribeLaunchTemplates",
        "DescribeMovingAddresses",
        "DescribeNatGateways",
        "DescribeNetworkAcls",
        "DescribeNetworkInterfaceAttribute",
        "DescribeNetworkInterfacePermissions",
        "DescribeNetworkInterfaces",
        "DescribePlacementGroups",
        "DescribePrefixLists",
        "DescribeRegions",
        "DescribeReservedInstances",
        "DescribeReservedInstancesListings",
        "DescribeReservedInstancesModifications",
        "DescribeReservedInstancesOfferings",
        "DescribeRouteTables",
        "DescribeScheduledInstanceAvailability",
        "DescribeScheduledInstances",
        "DescribeSecurityGroupReferences",
        "DescribeSecurityGroups",
        "DescribeSnapshotAttribute",
        "DescribeSnapshots",
        "DescribeSpotDatafeedSubscription",
        "DescribeSpotFleetInstances",
        "DescribeSpotFleetRequestHistory",
        "DescribeSpotFleetRequests",
        "DescribeSpotInstanceRequests",
        "DescribeSpotPriceHistory",
        "DescribeStaleSecurityGroups",
        "DescribeSubnets",
        "DescribeTags",
        "DescribeVolumeAttribute",
        "DescribeVolumeStatus",
        "DescribeVolumes",
        "DescribeVolumesModifications",
        "DescribeVpcAttribute",
        "DescribeVpcClassicLink",
        "DescribeVpcClassicLinkDnsSupport",
        "DescribeVpcEndpointConnectionNotifications",
        "DescribeVpcEndpointConnections",
        "DescribeVpcEndpointServiceConfigurations",
        "DescribeVpcEndpointServicePermissions",
        "DescribeVpcEndpointServices",
        "DescribeVpcEndpoints",
        "DescribeVpcPeeringConnections",
        "DescribeVpcs",
        "DescribeVpnConnections",
        "DescribeVpnGateways",
        "DetachClassicLinkVpc",
        "DetachInternetGateway",
        "DetachNetworkInterface",
        "DetachVolume",
        "DetachVpnGateway",
        "DisableVgwRoutePropagation",
        "DisableVpcClassicLink",
        "DisableVpcClassicLinkDnsSupport",
        "DisassociateAddress",
        "DisassociateIamInstanceProfile",
        "DisassociateRouteTable",
        "DisassociateSubnetCidrBlock",
        "DisassociateVpcCidrBlock",
        "EnableVgwRoutePropagation",
        "EnableVolumeIO",
        "EnableVpcClassicLink",
        "EnableVpcClassicLinkDnsSupport",
        "GetConsoleOutput",
        "GetConsoleScreenshot",
        "GetHostReservationPurchasePreview",
        "GetLaunchTemplateData",
        "GetPasswordData",
        "GetReservedInstancesExchangeQuote",
        "ImportImage",
        "ImportInstance",
        "ImportKeyPair",
        "ImportSnapshot",
        "ImportVolume",
        "ModifyFpgaImageAttribute",
        "ModifyHosts",
        "ModifyIdFormat",
        "ModifyIdentityIdFormat",
        "ModifyImageAttribute",
        "ModifyInstanceAttribute",
        "ModifyInstanceCreditSpecification",
        "ModifyInstancePlacement",
        "ModifyLaunchTemplate",
        "ModifyNetworkInterfaceAttribute",
        "ModifyReservedInstances",
        "ModifySnapshotAttribute",
        "ModifySpotFleetRequest",
        "ModifySubnetAttribute",
        "ModifyVolume",
        "ModifyVolumeAttribute",
        "ModifyVpcAttribute",
        "ModifyVpcEndpoint",
        "ModifyVpcEndpointConnectionNotification",
        "ModifyVpcEndpointServiceConfiguration",
        "ModifyVpcEndpointServicePermissions",
        "ModifyVpcPeeringConnectionOptions",
        "ModifyVpcTenancy",
        "MonitorInstances",
        "MoveAddressToVpc",
        "PurchaseHostReservation",
        "PurchaseReservedInstancesOffering",
        "PurchaseScheduledInstances",
        "RebootInstances",
        "RegisterImage",
        "RejectVpcEndpointConnections",
        "RejectVpcPeeringConnection",
        "ReleaseAddress",
        "ReleaseHosts",
        "ReplaceIamInstanceProfileAssociation",
        "ReplaceNetworkAclAssociation",
        "ReplaceNetworkAclEntry",
        "ReplaceRoute",
        "ReplaceRouteTableAssociation",
        "ReportInstanceStatus",
        "RequestSpotFleet",
        "RequestSpotInstances",
        "ResetFpgaImageAttribute",
        "ResetImageAttribute",
        "ResetInstanceAttribute",
        "ResetNetworkInterfaceAttribute",
        "ResetSnapshotAttribute",
        "RestoreAddressToClassic",
        "RevokeSecurityGroupEgress",
        "RevokeSecurityGroupIngress",
        "RunInstances",
        "RunScheduledInstances",
        "StartInstances",
        "StopInstances",
        "TerminateInstances",
        "UnassignIpv6Addresses",
        "UnassignPrivateIpAddresses",
        "UnmonitorInstances",
        "UpdateSecurityGroupRuleDescriptionsEgress",
        "UpdateSecurityGroupRuleDescriptionsIngress"
      ],
      "HasResource": true,
      "StringPrefix": "ec2",
      "conditionKeys": [
        "aws:RequestTag/tag-key",
        "aws:TagKeys",
        "ec2:AccepterVpc",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AvailabilityZone",
        "ec2:CreateAction",
        "ec2:EbsOptimized",
        "ec2:ElasticGpuType",
        "ec2:Encrypted",
        "ec2:ImageType",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Owner",
        "ec2:ParentSnapshot",
        "ec2:ParentVolume",
        "ec2:Permission",
        "ec2:PlacementGroup",
        "ec2:PlacementGroupStrategy",
        "ec2:ProductCode",
        "ec2:Public",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ReservedInstancesOfferingType",
        "ec2:ResourceTag/",
        "ec2:ResourceTag/tag-key",
        "ec2:RootDeviceType",
        "ec2:SnapshotTime",
        "ec2:SourceInstanceARN",
        "ec2:Subnet",
        "ec2:Tenancy",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeType",
        "ec2:Vpc"
      ]
    },
    "Amazon EC2 Container Registry": {
      "ARNFormat": "arn:aws:ecr:\u003cregion\u003e:\u003caccount_ID\u003e:repository/\u003crepository_name\u003e",
      "ARNRegex": "arn:aws:ecr+:[^:]+:[0-9]{12}:repository/.*",
      "Actions": [
        "BatchCheckLayerAvailability",
        "BatchDeleteImage",
        "BatchGetImage",
        "CompleteLayerUpload",
        "CreateRepository",
        "DeleteRepository",
        "DeleteRepositoryPolicy",
        "DescribeImages",
        "DescribeRepositories",
        "GetAuthorizationToken",
        "GetDownloadUrlForLayer",
        "GetRepositoryPolicy",
        "InitiateLayerUpload",
        "ListImages",
        "PutImage",
        "SetRepositoryPolicy",
        "UploadLayerPart"
      ],
      "HasResource": true,
      "StringPrefix": "ecr"
    },
    "Amazon EC2 Container Service": {
      "ARNFormat": "arn:aws:ecs:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource_type\u003e/\u003crelative_ID\u003e",
      "ARNRegex": "^arn:aws:ecs:.+",
      "Actions": [
        "CreateCluster",
        "CreateService",
        "DeleteCluster",
        "DeleteService",
        "DeregisterContainerInstance",
        "DeregisterTaskDefinition",
        "DescribeClusters",
        "DescribeContainerInstances",
        "DescribeServices",
        "DescribeTaskDefinition",
        "DescribeTasks",
        "DiscoverPollEndpoint",
        "ListClusters",
        "ListContainerInstances",
        "ListServices",
        "ListTaskDefinitionFamilies",
        "ListTaskDefinitions",
        "ListTasks",
        "Poll",
        "RegisterContainerInstance",
        "RegisterTaskDefinition",
        "RunTask",
        "StartTask",
        "StartTelemetrySession",
        "StopTask",
        "SubmitContainerStateChange",
        "SubmitTaskStateChange",
        "UpdateContainerAgent",
        "UpdateContainerInstancesState",
        "UpdateService"
      ],
      "HasResource": true,
      "StringPrefix": "ecs",
      "conditionKeys": [
        "ecs:cluster",
        "ecs:container-instances"
      ]
    },
    "Amazon ElastiCache": {
      "Actions": [
        "AddTagsToResource",
        "AuthorizeCacheSecurityGroupIngress",
        "CopySnapshot",
        "CreateCacheCluster",
        "CreateCacheParameterGroup",
        "CreateCacheSecurityGroup",
        "CreateCacheSubnetGroup",
        "CreateReplicationGroup",
        "CreateSnapshot",
        "DeleteCacheCluster",
        "DeleteCacheParameterGroup",
        "DeleteCacheSecurityGroup",
        "DeleteCacheSubnetGroup",
        "DeleteReplicationGroup",
        "DeleteSnapshot",
        "DescribeCacheClusters",
        "DescribeCacheEngineVersions",
        "DescribeCacheParameterGroups",
        "DescribeCacheParameters",
        "DescribeCacheSecurityGroups",
        "DescribeCacheSubnetGroups",
        "DescribeEngineDefaultParameters",
        "DescribeEvents",
        "DescribeReplicationGroups",
        "DescribeReservedCacheNodes",
        "DescribeReservedCacheNodesOfferings",
        "DescribeSnapshots",
        "ListAllowedNodeTypeModifications",
        "ListTagsForResource",
        "ModifyCacheCluster",
        "ModifyCacheParameterGroup",
        "ModifyCacheSubnetGroup",
        "ModifyReplicationGroup",
        "PurchaseReservedCacheNodesOffering",
        "RebootCacheCluster",
        "RemoveTagsFromResource",
        "ResetCacheParameterGroup",
        "RevokeCacheSecurityGroupIngress"
      ],
      "HasResource": false,
      "StringPrefix": "elasticache"
    },
    "Amazon Elastic Container Service for Kubernetes": {
      "ARNFormat": "arn:aws:eks:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource_type\u003e/\u003crelative_ID\u003e",
      "ARNRegex": "^arn:aws:eks:.+",
      "Actions": [
        "CreateCluster",
        "DeleteCluster",
        "DescribeCluster",
        "ListClusters"
      ],
      "HasResource": true,
      "StringPrefix": "eks"
    },
    "Amazon Elastic File System": {
      "ARNFormat": "arn:aws:elasticfilesystem:\u003cregion\u003e:\u003caccount-id\u003e:file-system/\u003cfile-system-id\u003e",
      "ARNRegex": "^arn:aws:elasticfilesystem:.+",
      "Actions": [
        "CreateFileSystem",
        "CreateMountTarget",
        "CreateTags",
        "DeleteFileSystem",
        "DeleteMountTarget",
        "DeleteTags",
        "DescribeFileSystems",
        "DescribeMountTargetSecurityGroups",
        "DescribeMountTargets",
        "DescribeTags",
        "ModifyMountTargetSecurityGroups"
      ],
      "HasResource": true,
      "StringPrefix": "elasticfilesystem"
    },
    "Amazon Elastic MapReduce": {
      "Actions": [
        "AddInstanceGroups",
        "AddJobFlowSteps",
        "AddTags",
        "CancelSteps",
        "CreateSecurityConfiguration",
        "DeleteSecurityConfiguration",
        "DescribeCluster",
        "DescribeJobFlows",
        "DescribeSecurityConfiguration",
        "DescribeStep",
        "ListBootstrapActions",
        "ListClusters",
        "ListInstanceGroups",
        "ListInstances",
        "ListSecurityConfigurations",
        "ListSteps",
        "ModifyInstanceGroups",
        "PutAutoScalingPolicy",
        "RemoveAutoScalingPolicy",
        "RemoveTags",
        "RunJobFlow",
        "SetTerminationProtection",
        "SetVisibleToAllUsers",
        "TerminateJobFlows",
        "ViewEventsFromAllClustersInConsole"
      ],
      "HasResource": false,
      "StringPrefix": "elasticmapreduce"
    },
    "Amazon Elastic Transcoder": {
      "ARNFormat": "arn:aws:elastictranscoder:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceId\u003e",
      "ARNRegex": "^arn:aws:elastictranscoder:.+",
      "Actions": [
        "CancelJob",
        "CreateJob",
        "CreatePipeline",
        "CreatePreset",
        "DeletePipeline",
        "DeletePreset",
        "ListJobsByPipeline",
        "ListJobsByStatus",
        "ListPipelines",
        "ListPresets",
        "ReadJob",
        "ReadPipeline",
        "ReadPreset",
        "TestRole",
        "UpdatePipeline",
        "UpdatePipelineNotifications",
        "UpdatePipelineStatus"
      ],
      "HasResource": true,
      "StringPrefix": "elastictranscoder"
    },
    "Amazon Elasticsearch Service": {
      "ARNFormat": "arn:aws:es:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource\u003e",
      "ARNRegex": "^arn:aws:es:.+",
      "Actions": [
        "AddTags",
        "CreateElasticsearchDomain",
        "DeleteElasticsearchDomain",
        "DeleteElasticsearchServiceRole",
        "DescribeElasticsearchDomain",
        "DescribeElasticsearchDomainConfig",
        "DescribeElasticsearchDomains",
        "DescribeElasticsearchInstanceTypeLimits",
        "ESHttpDelete",
        "ESHttpGet",
        "ESHttpHead",
        "ESHttpPost",
        "ESHttpPut",
        "ListDomainNames",
        "ListElasticsearchInstanceTypes",
        "ListElasticsearchVersions",
        "ListTags",
        "RemoveTags",
        "UpdateElasticsearchDomainConfig"
      ],
      "HasResource": true,
      "StringPrefix": "es"
    },
    "Amazon FreeRTOS": {
      "Actions": [
        "CreateSoftwareConfiguration",
        "DeleteSoftwareConfiguration",
        "DescribeHardwarePlatform",
        "DescribeSoftwareConfiguration",
        "GetSoftwareURL",
        "GetSoftwareURLForConfiguration",
        "ListFreeRTOSVersions",
        "ListHardwarePlatforms",
        "ListHardwareVendors",
        "ListSoftwareConfigurations",
        "UpdateSoftwareConfiguration"
      ],
      "HasResource": false,
      "StringPrefix": "freertos"
    },
    "Amazon GameLift": {
      "Actions": [
        "CreateAlias",
        "CreateBuild",
        "CreateFleet",
        "CreateGameSession",
        "CreatePlayerSession",
        "CreatePlayerSessions",
        "DeleteAlias",
        "DeleteBuild",
        "DeleteFleet",
        "DeleteScalingPolicy",
        "DescribeAlias",
        "DescribeBuild",
        "DescribeEC2InstanceLimits",
        "DescribeFleetAttributes",
        "DescribeFleetCapacity",
        "DescribeFleetEvents",
        "DescribeFleetPortSettings",
        "DescribeFleetUtilization",
        "DescribeGameSessionDetails",
        "DescribeGameSessions",
        "DescribeInstances",
        "DescribePlayerSessions",
        "DescribeRuntimeConfiguration",
        "DescribeScalingPolicies",
        "GetGameSessionLogUrl",
        "GetInstanceAccess",
        "ListAliases",
        "ListBuilds",
        "ListFleets",
        "PutScalingPolicy",
        "RequestUploadCredentials",
        "ResolveAlias",
        "SearchGameSessions",
        "UpdateAlias",
        "UpdateBuild",
        "UpdateFleetAttributes",
        "UpdateFleetCapacity",
        "UpdateFleetPortSettings",
        "UpdateGameSession",
        "UpdateRuntimeConfiguration"
      ],
      "HasResource": false,
      "StringPrefix": "gamelift"
    },
    "Amazon Glacier": {
      "ARNFormat": "arn:aws:glacier:\u003cregion\u003e:\u003caccountID\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:glacier:.+:.+:.+",
      "Actions": [
        "AbortMultipartUpload",
        "AbortVaultLock",
        "AddTagsToVault",
        "CompleteMultipartUpload",
        "CompleteVaultLock",
        "CreateVault",
        "DeleteArchive",
        "DeleteVault",
        "DeleteVaultAccessPolicy",
        "DeleteVaultNotifications",
        "DescribeJob",
        "DescribeVault",
        "GetDataRetrievalPolicy",
        "GetJobOutput",
        "GetVaultAccessPolicy",
        "GetVaultLock",
        "GetVaultNotifications",
        "InitiateJob",
        "InitiateMultipartUpload",
        "InitiateVaultLock",
        "ListJobs",
        "ListMultipartUploads",
        "ListParts",
        "ListProvisionedCapacity",
        "ListTagsForVault",
        "ListVaults",
        "PurchaseProvisionedCapacity",
        "RemoveTagsFromVault",
        "SetDataRetrievalPolicy",
        "SetVaultAccessPolicy",
        "SetVaultNotifications",
        "UploadArchive",
        "UploadMultipartPart"
      ],
      "HasResource": true,
      "StringPrefix": "glacier",
      "conditionKeys": [
        "glacier:ArchiveAgeInDays",
        "glacier:ResourceTag/"
      ]
    },
    "Amazon GuardDuty": {
      "ARNFormat": "arn:aws:guardduty:\u003cregion\u003e:\u003caccount_ID\u003e:.+",
      "ARNRegex": "^arn:aws:guardduty:.+",
      "Actions": [
        "AcceptInvitation",
        "ArchiveFindings",
        "CreateDetector",
        "CreateIPSet",
        "CreateMembers",
        "CreateSampleFindings",
        "CreateThreatIntelSet",
        "DeclineInvitations",
        "DeleteDetector",
        "DeleteIPSet",
        "DeleteInvitations",
        "DeleteMembers",
        "DeleteThreatIntelSet",
        "DisassociateFromMasterAccount",
        "DisassociateMembers",
        "GetDetector",
        "GetFindings",
        "GetFindingsStatistics",
        "GetIPSet",
        "GetInvitationsCount",
        "GetMasterAccount",
        "GetMembers",
        "GetThreatIntelSet",
        "InviteMembers",
        "ListDetectors",
        "ListFindings",
        "ListIPSets",
        "ListInvitations",
        "ListMembers",
        "ListThreatIntelSets",
        "StartMonitoringMembers",
        "StopMonitoringMembers",
        "UnarchiveFindings",
        "UpdateDetector",
        "UpdateFindingsFeedback",
        "UpdateIPSet",
        "UpdateThreatIntelSet"
      ],
      "HasResource": true,
      "StringPrefix": "guardduty"
    },
    "Amazon Inspector": {
      "Actions": [
        "AddAttributesToFindings",
        "CreateAssessmentTarget",
        "CreateAssessmentTemplate",
        "CreateResourceGroup",
        "DeleteAssessmentRun",
        "DeleteAssessmentTarget",
        "DeleteAssessmentTemplate",
        "DescribeAssessmentRuns",
        "DescribeAssessmentTargets",
        "DescribeAssessmentTemplates",
        "DescribeCrossAccountAccessRole",
        "DescribeFindings",
        "DescribeResourceGroups",
        "DescribeRulesPackages",
        "GetTelemetryMetadata",
        "ListAssessmentRunAgents",
        "ListAssessmentRuns",
        "ListAssessmentTargets",
        "ListAssessmentTemplates",
        "ListEventSubscriptions",
        "ListFindings",
        "ListRulesPackages",
        "ListTagsForResource",
        "PreviewAgents",
        "RegisterCrossAccountAccessRole",
        "RemoveAttributesFromFindings",
        "SetTagsForResource",
        "StartAssessmentRun",
        "StopAssessmentRun",
        "SubscribeToEvent",
        "UnsubscribeFromEvent",
        "UpdateAssessmentTarget"
      ],
      "HasResource": false,
      "StringPrefix": "inspector"
    },
    "Amazon Kinesis": {
      "ARNFormat": "arn:aws:kinesis:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceName\u003e",
      "ARNRegex": "^arn:aws:kinesis:.+",
      "Actions": [
        "AddTagsToStream",
        "CreateStream",
        "DecreaseStreamRetentionPeriod",
        "DeleteStream",
        "DescribeLimits",
        "DescribeStream",
        "DisableEnhancedMonitoring",
        "EnableEnhancedMonitoring",
        "GetRecords",
        "GetShardIterator",
        "IncreaseStreamRetentionPeriod",
        "ListStreams",
        "ListTagsForStream",
        "MergeShards",
        "PutRecord",
        "PutRecords",
        "RemoveTagsFromStream",
        "SplitShard",
        "UpdateShardCount"
      ],
      "HasResource": true,
      "StringPrefix": "kinesis"
    },
    "Amazon Kinesis Analytics": {
      "ARNFormat": "arn:aws:kinesisanalytics:\u003cregion\u003e:\u003caccount_ID\u003e:application/\u003capplicationname\u003e",
      "ARNRegex": "^arn:aws:kinesisanalytics:.+:[0-9]+:application/[a-zA-Z0-9_.-]+",
      "Actions": [
        "AddApplicationInput",
        "AddApplicationOutput",
        "AddApplicationReferenceDataSource",
        "CreateApplication",
        "DeleteApplication",
        "DeleteApplicationOutput",
        "DeleteApplicationReferenceDataSource",
        "DescribeApplication",
        "DiscoverInputSchema",
        "ListApplications",
        "StartApplication",
        "StopApplication",
        "UpdateApplication"
      ],
      "HasResource": true,
      "StringPrefix": "kinesisanalytics"
    },
    "Amazon Kinesis Firehose": {
      "ARNFormat": "arn:aws:firehose:\u003cregion\u003e:\u003caccount_ID\u003e:deliverystream/\u003cdeliverystreamname\u003e",
      "ARNRegex": "^arn:aws:firehose:.+:[0-9]+:deliverystream/.+",
      "Actions": [
        "CreateDeliveryStream",
        "DeleteDeliveryStream",
        "DescribeDeliveryStream",
        "ListDeliveryStreams",
        "PutRecord",
        "PutRecordBatch",
        "UpdateDestination"
      ],
      "HasResource": true,
      "StringPrefix": "firehose"
    },
    "Amazon Kinesis Video Streams": {
      "ARNFormat": "arn:aws:kinesisvideo:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresourceType\u003e/\u003cresourceName\u003e/\u003ccreationTime\u003e",
      "ARNRegex": "^arn:aws:kinesisvideo:.+",
      "Actions": [
        "CreateStream",
        "DeleteStream",
        "DescribeStream",
        "GetDataEndpoint",
        "GetHLSStreamingSessionURL",
        "GetMedia",
        "GetMediaForFragmentList",
        "ListFragments",
        "ListStreams",
        "ListTagsForStream",
        "PutMedia",
        "TagStream",
        "UntagStream",
        "UpdateDataRetention",
        "UpdateStream"
      ],
      "HasResource": true,
      "StringPrefix": "kinesisvideo"
    },
    "Amazon Lex": {
      "ARNFormat": "arn:aws:lex:\u003cregion\u003e:\u003caccount_ID\u003e:\u003ctype\u003e:\u003cname\u003e",
      "ARNRegex": "^arn:aws:lex:.+:[0-9]+:.+",
      "Actions": [
        "CreateBotVersion",
        "CreateIntentVersion",
        "CreateSlotTypeVersion",
        "DeleteBot",
        "DeleteBotAlias",
        "DeleteBotChannelAssociation",
        "DeleteBotVersion",
        "DeleteIntent",
        "DeleteIntentVersion",
        "DeleteSlotType",
        "DeleteSlotTypeVersion",
        "DeleteUtterances",
        "GetBot",
        "GetBotAlias",
        "GetBotAliases",
        "GetBotChannelAssociation",
        "GetBotChannelAssociations",
        "GetBotVersions",
        "GetBots",
        "GetBuiltinIntent",
        "GetBuiltinIntents",
        "GetBuiltinSlotTypes",
        "GetIntent",
        "GetIntentVersions",
        "GetIntents",
        "GetSlotType",
        "GetSlotTypeVersions",
        "GetSlotTypes",
        "GetUtterancesView",
        "PostContent",
        "PostText",
        "PutBot",
        "PutBotAlias",
        "PutIntent",
        "PutSlotType"
      ],
      "HasResource": true,
      "StringPrefix": "lex",
      "conditionKeys": [
        "lex:associatedIntents",
        "lex:associatedSlotTypes",
        "lex:channelType"
      ]
    },
    "Amazon Lightsail": {
      "ARNFormat": "arn:aws:lightsail:\u003cregionName\u003e:\u003cuserAccountId\u003e:\u003cresourceType\u003e/\u003cId\u003e",
      "ARNRegex": "arn:aws:lightsail:.+",
      "Actions": [
        "AllocateStaticIp",
        "AttachStaticIp",
        "CloseInstancePublicPorts",
        "CreateDomain",
        "CreateDomainEntry",
        "CreateInstanceSnapshot",
        "CreateInstances",
        "CreateInstancesFromSnapshot",
        "CreateKeyPair",
        "DeleteDomain",
        "DeleteDomainEntry",
        "DeleteInstance",
        "DeleteInstanceSnapshot",
        "DeleteKeyPair",
        "DetachStaticIp",
        "DownloadDefaultKeyPair",
        "GetActiveNames",
        "GetBlueprints",
        "GetBundles",
        "GetDomain",
        "GetDomains",
        "GetInstance",
        "GetInstanceAccessDetails",
        "GetInstanceMetricData",
        "GetInstancePortStates",
        "GetInstanceSnapshot",
        "GetInstanceSnapshots",
        "GetInstanceState",
        "GetInstances",
        "GetKeyPair",
        "GetKeyPairs",
        "GetOperation",
        "GetOperations",
        "GetOperationsForResource",
        "GetRegions",
        "GetStaticIp",
        "GetStaticIps",
        "ImportKeyPair",
        "IsVpcPeered",
        "OpenInstancePublicPorts",
        "PeerVpc",
        "RebootInstance",
        "ReleaseStaticIp",
        "StartInstance",
        "StopInstance",
        "UnpeerVpc",
        "UpdateDomainEntry"
      ],
      "HasResource": true,
      "StringPrefix": "lightsail"
    },
    "Amazon MQ": {
      "ARNFormat": "arn:${Partition}:mq:\u003cregion\u003e:\u003caccount\u003e:.+",
      "ARNRegex": "^arn:${Partition}:mq:.+",
      "Actions": [
        "CreateBroker",
        "CreateConfiguration",
        "CreateUser",
        "DeleteBroker",
        "DeleteUser",
        "DescribeBroker",
        "DescribeConfiguration",
        "DescribeConfigurationRevision",
        "DescribeUser",
        "ListBrokers",
        "ListConfigurationRevisions",
        "ListConfigurations",
        "ListUsers",
        "RebootBroker",
        "UpdateBroker",
        "UpdateConfiguration",
        "UpdateUser"
      ],
      "HasResource": true,
      "StringPrefix": "mq"
    },
    "Amazon Machine Learning": {
      "ARNFormat": "arn:aws:machinelearning:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cresource_type\u003e/\u003crelative_ID\u003e",
      "ARNRegex": "^arn:aws:machinelearning:.+",
      "Actions": [
        "AddTags",
        "CreateBatchPrediction",
        "CreateDataSourceFromRDS",
        "CreateDataSourceFromRedshift",
        "CreateDataSourceFromS3",
        "CreateEvaluation",
        "CreateMLModel",
        "CreateRealtimeEndpoint",
        "DeleteBatchPrediction",
        "DeleteDataSource",
        "DeleteEvaluation",
        "DeleteMLModel",
        "DeleteRealtimeEndpoint",
        "DeleteTags",
        "DescribeBatchPredictions",
        "DescribeDataSources",
        "DescribeEvaluations",
        "DescribeMLModels",
        "DescribeTags",
        "GetBatchPrediction",
        "GetDataSource",
        "GetEvaluation",
        "GetMLModel",
        "Predict",
        "UpdateBatchPrediction",
        "UpdateDataSource",
        "UpdateEvaluation",
        "UpdateMLModel"
      ],
      "HasResource": true,
      "StringPrefix": "machinelearning"
    },
    "Amazon Mechanical Turk": {
      "Actions": [
        "ApproveAssignment",
        "ApproveRejectedAssignment",
        "AssignQualification",
        "BlockWorker",
        "ChangeHITTypeOfHIT",
        "CreateHIT",
        "CreateQualificationType",
        "DisableHIT",
        "DisposeHIT",
        "DisposeQualificationType",
        "ExtendHIT",
        "ForceExpireHIT",
        "GetAccountBalance",
        "GetAssignment",
        "GetAssignmentsForHIT",
        "GetBlockedWorkers",
        "GetBonusPayments",
        "GetFileUploadURL",
        "GetHIT",
        "GetHITsForQualificationType",
        "GetQualificationRequests",
        "GetQualificationScore",
        "GetQualificationType",
        "GetQualificationsForQualificationType",
        "GetRequesterStatistic",
        "GetRequesterWorkerStatistic",
        "GetReviewResultsForHIT",
        "GetReviewableHITs",
        "GrantBonus",
        "GrantQualification",
        "NotifyWorkers",
        "RegisterHITType",
        "RejectAssignment",
        "RejectQualificationRequest",
        "RevokeQualification",
        "SearchHITs",
        "SearchQualificationTypes",
        "SendTestEventNotification",
        "SetHITAsReviewing",
        "SetHITTypeNotification",
        "UnblockWorker",
        "UpdateQualificationScore",
        "UpdateQualificationType"
      ],
      "HasResource": false,
      "StringPrefix": "mechanicalturk"
    },
    "Amazon Message Delivery Service": {
      "Actions": [
        "AcknowledgeMessage",
        "DeleteMessage",
        "FailMessage",
        "GetEndpoint",
        "GetMessages",
        "SendReply"
      ],
      "HasResource": false,
      "StringPrefix": "ec2messages"
    },
    "Amazon Mobile Analytics": {
      "Actions": [
        "GetFinancialReports",
        "GetReports",
        "PutEvents"
      ],
      "HasResource": false,
      "StringPrefix": "mobileanalytics"
    },
    "Amazon Neptune": {
      "ARNFormat": "arn:aws:neptune-db:\u003cregion\u003e:\u003caccountID\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:neptune-db:.+",
      "Actions": [
        "connect"
      ],
      "HasResource": true,
      "StringPrefix": "neptune-db"
    },
    "Amazon Pinpoint": {
      "ARNFormat": "arn:aws:mobiletargeting:\u003cregion\u003e:\u003caccount_ID\u003e:.+",
      "ARNRegex": "^arn:aws:mobiletargeting:.+",
      "Actions": [
        "CreateCampaign",
        "CreateImportJob",
        "CreateSegment",
        "DeleteApnsChannel",
        "DeleteCampaign",
        "DeleteGcmChannel",
        "DeleteSegment",
        "GetApnsChannel",
        "GetApplicationSettings",
        "GetCampaign",
        "GetCampaignActivities",
        "GetCampaignVersion",
        "GetCampaignVersions",
        "GetCampaigns",
        "GetEndpoint",
        "GetGcmChannel",
        "GetImportJob",
        "GetImportJobs",
        "GetReports",
        "GetSegment",
        "GetSegmentImportJobs",
        "GetSegmentVersion",
        "GetSegmentVersions",
        "GetSegments",
        "UpdateApnsChannel",
        "UpdateApplicationSettings",
        "UpdateCampaign",
        "UpdateEndpoint",
        "UpdateEndpointsBatch",
        "UpdateGcmChannel",
        "UpdateSegment"
      ],
      "HasResource": true,
      "StringPrefix": "mobiletargeting"
    },
    "Amazon Polly": {
      "ARNFormat": "arn:aws:polly:\u003cregion\u003e:\u003caccountID\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:polly::.+",
      "Actions": [
        "DeleteLexicon",
        "DescribeVoices",
        "GetLexicon",
        "GetSpeechSynthesisTask",
        "ListLexicons",
        "ListSpeechSynthesisTasks",
        "PutLexicon",
        "StartSpeechSynthesisTask",
        "SynthesizeSpeech"
      ],
      "HasResource": true,
      "StringPrefix": "polly"
    },
    "Amazon RDS": {
      "ARNFormat": "arn:aws:rds:\u003cregion\u003e:\u003caccountID\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:rds:.+",
      "Actions": [
        "AddRoleToDBCluster",
        "AddSourceIdentifierToSubscription",
        "AddTagsToResource",
        "ApplyPendingMaintenanceAction",
        "AuthorizeDBSecurityGroupIngress",
        "CopyDBClusterSnapshot",
        "CopyDBParameterGroup",
        "CopyDBSnapshot",
        "CopyOptionGroup",
        "CreateDBCluster",
        "CreateDBClusterParameterGroup",
        "CreateDBClusterSnapshot",
        "CreateDBInstance",
        "CreateDBInstanceReadReplica",
        "CreateDBParameterGroup",
        "CreateDBSecurityGroup",
        "CreateDBSnapshot",
        "CreateDBSubnetGroup",
        "CreateEventSubscription",
        "CreateOptionGroup",
        "DeleteDBCluster",
        "DeleteDBClusterParameterGroup",
        "DeleteDBClusterSnapshot",
        "DeleteDBInstance",
        "DeleteDBParameterGroup",
        "DeleteDBSecurityGroup",
        "DeleteDBSnapshot",
        "DeleteDBSubnetGroup",
        "DeleteEventSubscription",
        "DeleteOptionGroup",
        "DescribeAccountAttributes",
        "DescribeCertificates",
        "DescribeDBClusterParameterGroups",
        "DescribeDBClusterParameters",
        "DescribeDBClusterSnapshotAttributes",
        "DescribeDBClusterSnapshots",
        "DescribeDBClusters",
        "DescribeDBEngineVersions",
        "DescribeDBInstances",
        "DescribeDBLogFiles",
        "DescribeDBParameterGroups",
        "DescribeDBParameters",
        "DescribeDBSecurityGroups",
        "DescribeDBSnapshotAttributes",
        "DescribeDBSnapshots",
        "DescribeDBSubnetGroups",
        "DescribeEngineDefaultClusterParameters",
        "DescribeEngineDefaultParameters",
        "DescribeEventCategories",
        "DescribeEventSubscriptions",
        "DescribeEvents",
        "DescribeOptionGroupOptions",
        "DescribeOptionGroups",
        "DescribeOrderableDBInstanceOptions",
        "DescribePendingMaintenanceActions",
        "DescribeReservedDBInstances",
        "DescribeReservedDBInstancesOfferings",
        "DownloadCompleteDBLogFile",
        "DownloadDBLogFilePortion",
        "FailoverDBCluster",
        "ListTagsForResource",
        "ModifyDBCluster",
        "ModifyDBClusterParameterGroup",
        "ModifyDBClusterSnapshotAttribute",
        "ModifyDBInstance",
        "ModifyDBParameterGroup",
        "ModifyDBSnapshotAttribute",
        "ModifyDBSubnetGroup",
        "ModifyEventSubscription",
        "ModifyOptionGroup",
        "PromoteReadReplica",
        "PurchaseReservedDBInstancesOffering",
        "RebootDBInstance",
        "RemoveSourceIdentifierFromSubscription",
        "RemoveTagsFromResource",
        "ResetDBClusterParameterGroup",
        "ResetDBParameterGroup",
        "RestoreDBClusterFromSnapshot",
        "RestoreDBClusterToPointInTime",
        "RestoreDBInstanceFromDBSnapshot",
        "RestoreDBInstanceToPointInTime",
        "RevokeDBSecurityGroupIngress",
        "StartDBInstance",
        "StopDBInstance"
      ],
      "HasResource": true,
      "StringPrefix": "rds",
      "conditionKeys": [
        "Piops",
        "rds:DatabaseClass",
        "rds:DatabaseEngine",
        "rds:DatabaseName",
        "rds:MultiAz",
        "rds:Piops",
        "rds:StorageSize",
        "rds:Vpc",
        "rds:cluster-pg-tag",
        "rds:cluster-snapshot-tag",
        "rds:cluster-tag",
        "rds:db-tag",
        "rds:es-tag",
        "rds:og-tag",
        "rds:pg-tag",
        "rds:ri-tag",
        "rds:secgrp-tag",
        "rds:snapshot-tag",
        "rds:subgrp-tag"
      ]
    },
    "Amazon Redshift": {
      "ARNFormat": "arn:aws:redshift:\u003cregion\u003e:\u003caccountID\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:redshift:.+:.+:.+",
      "Actions": [
        "AuthorizeClusterSecurityGroupIngress",
        "AuthorizeSnapshotAccess",
        "CancelQuerySession",
        "CopyClusterSnapshot",
        "CreateCluster",
        "CreateClusterParameterGroup",
        "CreateClusterSecurityGroup",
        "CreateClusterSnapshot",
        "CreateClusterSubnetGroup",
        "CreateClusterUser",
        "CreateEventSubscription",
        "CreateHsmClientCertificate",
        "CreateHsmConfiguration",
        "CreateSnapshotCopyGrant",
        "CreateTags",
        "DeleteCluster",
        "DeleteClusterParameterGroup",
        "DeleteClusterSecurityGroup",
        "DeleteClusterSnapshot",
        "DeleteClusterSubnetGroup",
        "DeleteEventSubscription",
        "DeleteHsmClientCertificate",
        "DeleteHsmConfiguration",
        "DeleteSnapshotCopyGrant",
        "DeleteTags",
        "DescribeClusterParameterGroups",
        "DescribeClusterParameters",
        "DescribeClusterSecurityGroups",
        "DescribeClusterSnapshots",
        "DescribeClusterSubnetGroups",
        "DescribeClusterVersions",
        "DescribeClusters",
        "DescribeDefaultClusterParameters",
        "DescribeEventCategories",
        "DescribeEventSubscriptions",
        "DescribeEvents",
        "DescribeHsmClientCertificates",
        "DescribeHsmConfigurations",
        "DescribeLoggingStatus",
        "DescribeOrderableClusterOptions",
        "DescribeReservedNodeOfferings",
        "DescribeReservedNodes",
        "DescribeResize",
        "DescribeSnapshotCopyGrants",
        "DescribeTableRestoreStatus",
        "DescribeTags",
        "DisableLogging",
        "DisableSnapshotCopy",
        "EnableLogging",
        "EnableSnapshotCopy",
        "GetClusterCredentials",
        "JoinGroup",
        "ModifyCluster",
        "ModifyClusterIamRoles",
        "ModifyClusterParameterGroup",
        "ModifyClusterSubnetGroup",
        "ModifyEventSubscription",
        "ModifySnapshotCopyRetentionPeriod",
        "PurchaseReservedNodeOffering",
        "RebootCluster",
        "ResetClusterParameterGroup",
        "RestoreFromClusterSnapshot",
        "RestoreTableFromClusterSnapshot",
        "RevokeClusterSecurityGroupIngress",
        "RevokeSnapshotAccess",
        "RotateEncryptionKey",
        "ViewQueriesInConsole"
      ],
      "HasResource": true,
      "StringPrefix": "redshift",
      "conditionKeys": [
        "redshift:DbName",
        "redshift:DbUser",
        "redshift:DurationSeconds"
      ]
    },
    "Amazon Rekognition": {
      "ARNFormat": "arn:aws:rekognition:\u003cregion\u003e:\u003caccountID\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:rekognition::.+",
      "Actions": [
        "CompareFaces",
        "CreateCollection",
        "CreateStreamProcessor",
        "DeleteCollection",
        "DeleteFaces",
        "DeleteStreamProcessor",
        "DescribeStreamProcessor",
        "DetectFaces",
        "DetectLabels",
        "DetectModerationLabels",
        "DetectText",
        "GetCelebrityInfo",
        "GetCelebrityRecognition",
        "GetContentModeration",
        "GetFaceDetection",
        "GetFaceSearch",
        "GetLabelDetection",
        "GetPersonTracking",
        "IndexFaces",
        "ListCollections",
        "ListFaces",
        "ListStreamProcessors",
        "RecognizeCelebrities",
        "SearchFaces",
        "SearchFacesByImage",
        "StartCelebrityRecognition",
        "StartContentModeration",
        "StartFaceDetection",
        "StartFaceSearch",
        "StartLabelDetection",
        "StartPersonTracking",
        "StartStreamProcessor",
        "StopStreamProcessor"
      ],
      "HasResource": true,
      "StringPrefix": "rekognition"
    },
    "Amazon Resource Group Tagging API": {
      "Actions": [
        "GetResources",
        "GetTagKeys",
        "GetTagValues",
        "TagResources",
        "UntagResources"
      ],
      "HasResource": false,
      "StringPrefix": "tag"
    },
    "Amazon Route 53": {
      "ARNFormat": "arn:aws:route53:::\u003cresource\u003e/\u003cid\u003e",
      "ARNRegex": "^arn:aws:route53:::.+",
      "Actions": [
        "AssociateVPCWithHostedZone",
        "ChangeResourceRecordSets",
        "ChangeTagsForResource",
        "CreateHealthCheck",
        "CreateHostedZone",
        "CreateQueryLoggingConfig",
        "CreateReusableDelegationSet",
        "CreateTrafficPolicy",
        "CreateTrafficPolicyInstance",
        "CreateTrafficPolicyVersion",
        "CreateVPCAssociationAuthorization",
        "DeleteHealthCheck",
        "DeleteHostedZone",
        "DeleteQueryLoggingConfig",
        "DeleteReusableDelegationSet",
        "DeleteTrafficPolicy",
        "DeleteTrafficPolicyInstance",
        "DeleteVPCAssociationAuthorization",
        "DisassociateVPCFromHostedZone",
        "GetAccountLimit",
        "GetChange",
        "GetCheckerIpRanges",
        "GetGeoLocation",
        "GetHealthCheck",
        "GetHealthCheckCount",
        "GetHealthCheckLastFailureReason",
        "GetHealthCheckStatus",
        "GetHostedZone",
        "GetHostedZoneCount",
        "GetHostedZoneLimit",
        "GetQueryLoggingConfig",
        "GetReusableDelegationSet",
        "GetReusableDelegationSetLimit",
        "GetTrafficPolicy",
        "GetTrafficPolicyInstance",
        "GetTrafficPolicyInstanceCount",
        "ListGeoLocations",
        "ListHealthChecks",
        "ListHostedZones",
        "ListHostedZonesByName",
        "ListQueryLoggingConfigs",
        "ListResourceRecordSets",
        "ListReusableDelegationSets",
        "ListTagsForResource",
        "ListTagsForResources",
        "ListTrafficPolicies",
        "ListTrafficPolicyInstances",
        "ListTrafficPolicyInstancesByHostedZone",
        "ListTrafficPolicyInstancesByPolicy",
        "ListTrafficPolicyVersions",
        "ListVPCAssociationAuthorizations",
        "TestDNSAnswer",
        "UpdateHealthCheck",
        "UpdateHostedZoneComment",
        "UpdateTrafficPolicyComment",
        "UpdateTrafficPolicyInstance"
      ],
      "HasResource": true,
      "StringPrefix": "route53"
    },
    "Amazon Route 53 Auto Naming": {
      "ARNFormat": "arn:aws:servicediscovery:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource-type\u003e/\u003cresource_name\u003e",
      "ARNRegex": "^arn:aws:servicediscovery:.+",
      "Actions": [
        "CreatePrivateDnsNamespace",
        "CreatePublicDnsNamespace",
        "CreateService",
        "DeleteNamespace",
        "DeleteService",
        "DeregisterInstance",
        "GetInstance",
        "GetInstancesHealthStatus",
        "GetNamespace",
        "GetOperation",
        "GetService",
        "ListInstances",
        "ListNamespaces",
        "ListOperations",
        "ListServices",
        "RegisterInstance",
        "UpdateInstanceHeartbeatStatus",
        "UpdateService"
      ],
      "HasResource": true,
      "StringPrefix": "servicediscovery"
    },
    "Amazon Route53 Domains": {
      "Actions": [
        "CheckDomainAvailability",
        "DeleteTagsForDomain",
        "DisableDomainAutoRenew",
        "DisableDomainTransferLock",
        "EnableDomainAutoRenew",
        "EnableDomainTransferLock",
        "GetContactReachabilityStatus",
        "GetDomainDetail",
        "GetDomainSuggestions",
        "GetOperationDetail",
        "ListDomains",
        "ListOperations",
        "ListTagsForDomain",
        "RegisterDomain",
        "RenewDomain",
        "ResendContactReachabilityEmail",
        "RetrieveDomainAuthCode",
        "TransferDomain",
        "UpdateDomainContact",
        "UpdateDomainContactPrivacy",
        "UpdateDomainNameservers",
        "UpdateTagsForDomain",
        "ViewBilling"
      ],
      "HasResource": false,
      "StringPrefix": "route53domains"
    },
    "Amazon S3": {
      "ARNFormat": "arn:aws:s3:::\u003cbucket_name\u003e/\u003ckey_name\u003e",
      "ARNRegex": "^arn:aws:s3:::.+",
      "Actions": [
        "AbortMultipartUpload",
        "CreateBucket",
        "DeleteBucket",
        "DeleteBucketPolicy",
        "DeleteBucketWebsite",
        "DeleteObject",
        "DeleteObjectTagging",
        "DeleteObjectVersion",
        "DeleteObjectVersionTagging",
        "GetAccelerateConfiguration",
        "GetAnalyticsConfiguration",
        "GetBucketAcl",
        "GetBucketCORS",
        "GetBucketLocation",
        "GetBucketLogging",
        "GetBucketNotification",
        "GetBucketPolicy",
        "GetBucketRequestPayment",
        "GetBucketTagging",
        "GetBucketVersioning",
        "GetBucketWebsite",
        "GetEncryptionConfiguration",
        "GetInventoryConfiguration",
        "GetIpConfiguration",
        "GetLifecycleConfiguration",
        "GetMetricsConfiguration",
        "GetObject",
        "GetObjectAcl",
        "GetObjectTagging",
        "GetObjectTorrent",
        "GetObjectVersion",
        "GetObjectVersionAcl",
        "GetObjectVersionForReplication",
        "GetObjectVersionTagging",
        "GetObjectVersionTorrent",
        "GetReplicationConfiguration",
        "HeadBucket",
        "ListAllMyBuckets",
        "ListBucket",
        "ListBucketByTags",
        "ListBucketMultipartUploads",
        "ListBucketVersions",
        "ListMultipartUploadParts",
        "ObjectOwnerOverrideToBucketOwner",
        "PutAccelerateConfiguration",
        "PutAnalyticsConfiguration",
        "PutBucketAcl",
        "PutBucketCORS",
        "PutBucketLogging",
        "PutBucketNotification",
        "PutBucketPolicy",
        "PutBucketRequestPayment",
        "PutBucketTagging",
        "PutBucketVersioning",
        "PutBucketWebsite",
        "PutEncryptionConfiguration",
        "PutInventoryConfiguration",
        "PutIpConfiguration",
        "PutLifecycleConfiguration",
        "PutMetricsConfiguration",
        "PutObject",
        "PutObjectAcl",
        "PutObjectTagging",
        "PutObjectVersionAcl",
        "PutObjectVersionTagging",
        "PutReplicationConfiguration",
        "ReplicateDelete",
        "ReplicateObject",
        "ReplicateTags",
        "RestoreObject"
      ],
      "HasResource": true,
      "StringPrefix": "s3",
      "conditionKeys": [
        "s3:ExistingObjectTag/\u003ckey\u003e",
        "s3:LocationConstraint",
        "s3:RequestObjectTag/\u003ckey\u003e",
        "s3:RequestObjectTagKeys",
        "s3:VersionId",
        "s3:authtype",
        "s3:delimiter",
        "s3:locationconstraint",
        "s3:max-keys",
        "s3:prefix",
        "s3:signatureage",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-copy-source",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-metadata-directive",
        "s3:x-amz-server-side-encryption",
        "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "s3:x-amz-storage-class",
        "s3:x-amz-website-redirect-location"
      ]
    },
    "Amazon SES": {
      "Actions": [
        "CloneReceiptRuleSet",
        "CreateConfigurationSet",
        "CreateConfigurationSetEventDestination",
        "CreateConfigurationSetTrackingOptions",
        "CreateCustomVerificationEmailTemplate",
        "CreateReceiptFilter",
        "CreateReceiptRule",
        "CreateReceiptRuleSet",
        "CreateTemplate",
        "DeleteConfigurationSet",
        "DeleteConfigurationSetEventDestination",
        "DeleteConfigurationSetTrackingOptions",
        "DeleteCustomVerificationEmailTemplate",
        "DeleteIdentity",
        "DeleteIdentityPolicy",
        "DeleteReceiptFilter",
        "DeleteReceiptRule",
        "DeleteReceiptRuleSet",
        "DeleteTemplate",
        "DeleteVerifiedEmailAddress",
        "DescribeActiveReceiptRuleSet",
        "DescribeConfigurationSet",
        "DescribeReceiptRule",
        "DescribeReceiptRuleSet",
        "GetAccountSendingEnabled",
        "GetCustomVerificationEmailTemplate",
        "GetIdentityDkimAttributes",
        "GetIdentityMailFromDomainAttributes",
        "GetIdentityNotificationAttributes",
        "GetIdentityPolicies",
        "GetIdentityVerificationAttributes",
        "GetSendQuota",
        "GetSendStatistics",
        "GetTemplate",
        "ListConfigurationSets",
        "ListCustomVerificationEmailTemplates",
        "ListIdentities",
        "ListIdentityPolicies",
        "ListReceiptFilters",
        "ListReceiptRuleSets",
        "ListTemplates",
        "ListVerifiedEmailAddresses",
        "PutIdentityPolicy",
        "ReorderReceiptRuleSet",
        "SendBounce",
        "SendBulkTemplatedEmail",
        "SendCustomVerificationEmail",
        "SendEmail",
        "SendRawEmail",
        "SendTemplatedEmail",
        "SetActiveReceiptRuleSet",
        "SetIdentityDkimEnabled",
        "SetIdentityFeedbackForwardingEnabled",
        "SetIdentityHeadersInNotificationsEnabled",
        "SetIdentityMailFromDomain",
        "SetIdentityNotificationTopic",
        "SetReceiptRulePosition",
        "TestRenderTemplate",
        "UpdateAccountSendingEnabled",
        "UpdateConfigurationSetEventDestination",
        "UpdateConfigurationSetReputationMetricsEnabled",
        "UpdateConfigurationSetSendingEnabled",
        "UpdateConfigurationSetTrackingOptions",
        "UpdateCustomVerificationEmailTemplate",
        "UpdateReceiptRule",
        "UpdateTemplate",
        "VerifyDomainDkim",
        "VerifyDomainIdentity",
        "VerifyEmailAddress",
        "VerifyEmailIdentity"
      ],
      "HasResource": false,
      "StringPrefix": "ses",
      "conditionKeys": [
        "ses:FeedbackAddress",
        "ses:FromAddress",
        "ses:FromDisplayName",
        "ses:Recipients"
      ]
    },
    "Amazon SNS": {
      "ARNFormat": "arn:aws:sns:\u003cregion\u003e:\u003caccount_ID\u003e:\u003ctopic_name\u003e",
      "ARNRegex": "^arn:aws:sns:.+",
      "Actions": [
        "AddPermission",
        "CheckIfPhoneNumberIsOptedOut",
        "ConfirmSubscription",
        "CreatePlatformApplication",
        "CreatePlatformEndpoint",
        "CreateTopic",
        "DeleteEndpoint",
        "DeletePlatformApplication",
        "DeleteTopic",
        "GetEndpointAttributes",
        "GetPlatformApplicationAttributes",
        "GetSMSAttributes",
        "GetSubscriptionAttributes",
        "GetTopicAttributes",
        "ListEndpointsByPlatformApplication",
        "ListPhoneNumbersOptedOut",
        "ListPlatformApplications",
        "ListSubscriptions",
        "ListSubscriptionsByTopic",
        "ListTopics",
        "OptInPhoneNumber",
        "Publish",
        "RemovePermission",
        "SetEndpointAttributes",
        "SetPlatformApplicationAttributes",
        "SetSMSAttributes",
        "SetSubscriptionAttributes",
        "SetTopicAttributes",
        "Subscribe",
        "Unsubscribe"
      ],
      "HasResource": true,
      "StringPrefix": "sns",
      "conditionKeys": [
        "sns:Endpoint",
        "sns:Protocol"
      ]
    },
    "Amazon SQS": {
      "ARNFormat": "arn:aws:sqs:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cqueue_name\u003e",
      "ARNRegex": "^arn:aws:sqs:.+",
      "Actions": [
        "AddPermission",
        "ChangeMessageVisibility",
        "ChangeMessageVisibilityBatch",
        "CreateQueue",
        "DeleteMessage",
        "DeleteMessageBatch",
        "DeleteQueue",
        "GetQueueAttributes",
        "GetQueueUrl",
        "ListDeadLetterSourceQueues",
        "ListQueueTags",
        "ListQueues",
        "PurgeQueue",
        "ReceiveMessage",
        "RemovePermission",
        "SendMessage",
        "SendMessageBatch",
        "SetQueueAttributes",
        "TagQueue",
        "UntagQueue"
      ],
      "HasResource": true,
      "StringPrefix": "sqs"
    },
    "Amazon SageMaker": {
      "ARNFormat": "arn:aws:sagemaker:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource-type\u003e/\u003cresource_name\u003e",
      "ARNRegex": "^arn:${Partition}:sagemaker:.+",
      "Actions": [
        "AddTags",
        "CreateEndpoint",
        "CreateEndpointConfig",
        "CreateHyperParameterTuningJob",
        "CreateModel",
        "CreateNotebookInstance",
        "CreateNotebookInstanceLifecycleConfig",
        "CreatePresignedNotebookInstanceUrl",
        "CreateTrainingJob",
        "DeleteEndpoint",
        "DeleteEndpointConfig",
        "DeleteModel",
        "DeleteNotebookInstance",
        "DeleteNotebookInstanceLifecycleConfig",
        "DeleteTags",
        "DescribeEndpoint",
        "DescribeEndpointConfig",
        "DescribeHyperParameterTuningJob",
        "DescribeModel",
        "DescribeNotebookInstance",
        "DescribeNotebookInstanceLifecycleConfig",
        "DescribeTrainingJob",
        "InvokeEndpoint",
        "ListEndpointConfigs",
        "ListEndpoints",
        "ListHyperParameterTuningJobs",
        "ListModels",
        "ListNotebookInstanceLifecycleConfigs",
        "ListNotebookInstances",
        "ListTags",
        "ListTrainingJobs",
        "ListTrainingJobsForHyperParameterTuningJob",
        "StartNotebookInstance",
        "StopHyperParameterTuningJob",
        "StopNotebookInstance",
        "StopTrainingJob",
        "UpdateEndpoint",
        "UpdateEndpointWeightsAndCapacities",
        "UpdateNotebookInstance"
      ],
      "HasResource": true,
      "StringPrefix": "sagemaker"
    },
    "Amazon Simple Systems Manager": {
      "ARNFormat": "arn:aws:ssm:\u003cregion\u003e:\u003caccount_ID\u003e:\u003cdocument_name\u003e",
      "ARNRegex": "^arn:aws:(ssm|ec2):.+",
      "Actions": [
        "AddTagsToResource",
        "CancelCommand",
        "CreateActivation",
        "CreateAssociation",
        "CreateAssociationBatch",
        "CreateDocument",
        "CreateMaintenanceWindow",
        "CreatePatchBaseline",
        "CreateResourceDataSync",
        "DeleteActivation",
        "DeleteAssociation",
        "DeleteDocument",
        "DeleteMaintenanceWindow",
        "DeleteParameter",
        "DeleteParameters",
        "DeletePatchBaseline",
        "DeleteResourceDataSync",
        "DeregisterManagedInstance",
        "DeregisterPatchBaselineForPatchGroup",
        "DeregisterTargetFromMaintenanceWindow",
        "DeregisterTaskFromMaintenanceWindow",
        "DescribeActivations",
        "DescribeAssociation",
        "DescribeAutomationExecutions",
        "DescribeAutomationStepExecutions",
        "DescribeAvailablePatches",
        "DescribeDocument",
        "DescribeDocumentParameters",
        "DescribeDocumentPermission",
        "DescribeEffectiveInstanceAssociations",
        "DescribeEffectivePatchesForPatchBaseline",
        "DescribeInstanceAssociationsStatus",
        "DescribeInstanceInformation",
        "DescribeInstancePatchStates",
        "DescribeInstancePatchStatesForPatchGroup",
        "DescribeInstancePatches",
        "DescribeInstanceProperties",
        "DescribeMaintenanceWindowExecutionTaskInvocations",
        "DescribeMaintenanceWindowExecutionTasks",
        "DescribeMaintenanceWindowExecutions",
        "DescribeMaintenanceWindowTargets",
        "DescribeMaintenanceWindowTasks",
        "DescribeMaintenanceWindows",
        "DescribeParameters",
        "DescribePatchBaselines",
        "DescribePatchGroupState",
        "DescribePatchGroups",
        "GetAutomationExecution",
        "GetCommandInvocation",
        "GetDefaultPatchBaseline",
        "GetDeployablePatchSnapshotForInstance",
        "GetDocument",
        "GetInventory",
        "GetInventorySchema",
        "GetMaintenanceWindow",
        "GetMaintenanceWindowExecution",
        "GetMaintenanceWindowExecutionTask",
        "GetMaintenanceWindowExecutionTaskInvocation",
        "GetMaintenanceWindowTask",
        "GetManifest",
        "GetParameter",
        "GetParameterHistory",
        "GetParameters",
        "GetParametersByPath",
        "GetPatchBaseline",
        "GetPatchBaselineForPatchGroup",
        "ListAssociationVersions",
        "ListAssociations",
        "ListCommandInvocations",
        "ListCommands",
        "ListDocumentVersions",
        "ListDocuments",
        "ListInstanceAssociations",
        "ListInventoryEntries",
        "ListResourceDataSync",
        "ListTagsForResource",
        "ModifyDocumentPermission",
        "PutComplianceItems",
        "PutConfigurePackageResult",
        "PutInventory",
        "PutParameter",
        "RegisterDefaultPatchBaseline",
        "RegisterPatchBaselineForPatchGroup",
        "RegisterTargetWithMaintenanceWindow",
        "RegisterTaskWithMaintenanceWindow",
        "RemoveTagsFromResource",
        "SendAutomationSignal",
        "SendCommand",
        "StartAssociationsOnce",
        "StartAutomationExecution",
        "StopAutomationExecution",
        "UpdateAssociation",
        "UpdateAssociationStatus",
        "UpdateDocument",
        "UpdateDocumentDefaultVersion",
        "UpdateInstanceAssociationStatus",
        "UpdateInstanceInformation",
        "UpdateMaintenanceWindow",
        "UpdateMaintenanceWindowTarget",
        "UpdateMaintenanceWindowTask",
        "UpdateManagedInstanceRole",
        "UpdatePatchBaseline"
      ],
      "HasResource": true,
      "StringPrefix": "ssm"
    },
    "Amazon Simple Workflow Service": {
      "ARNFormat": "arn:aws:swf:\u003cregion\u003e:\u003caccount\u003e:/\u003cdomain\u003e/\u003cdomainName\u003e",
      "ARNRegex": "^arn:aws:swf:.+",
      "Actions": [
        "CancelTimer",
        "CancelWorkflowExecution",
        "CompleteWorkflowExecution",
        "ContinueAsNewWorkflowExecution",
        "CountClosedWorkflowExecutions",
        "CountOpenWorkflowExecutions",
        "CountPendingActivityTasks",
        "CountPendingDecisionTasks",
        "DeprecateActivityType",
        "DeprecateDomain",
        "DeprecateWorkflowType",
        "DescribeActivityType",
        "DescribeDomain",
        "DescribeWorkflowExecution",
        "DescribeWorkflowType",
        "FailWorkflowExecution",
        "GetWorkflowExecutionHistory",
        "ListActivityTypes",
        "ListClosedWorkflowExecutions",
        "ListDomains",
        "ListOpenWorkflowExecutions",
        "ListWorkflowTypes",
        "PollForActivityTask",
        "PollForDecisionTask",
        "RecordActivityTaskHeartbeat",
        "RecordMarker",
        "RegisterActivityType",
        "RegisterDomain",
        "RegisterWorkflowType",
        "RequestCancelActivityTask",
        "RequestCancelExternalWorkflowExecution",
        "RequestCancelWorkflowExecution",
        "RespondActivityTaskCanceled",
        "RespondActivityTaskCompleted",
        "RespondActivityTaskFailed",
        "RespondDecisionTaskCompleted",
        "ScheduleActivityTask",
        "SignalExternalWorkflowExecution",
        "SignalWorkflowExecution",
        "StartChildWorkflowExecution",
        "StartTimer",
        "StartWorkflowExecution",
        "TerminateWorkflowExecution"
      ],
      "HasResource": true,
      "StringPrefix": "swf",
      "conditionKeys": [
        " swf:workflowType.name",
        "swf:activityType.name",
        "swf:activityType.version",
        "swf:defaultTaskList.name",
        "swf:name",
        "swf:tagFilter.tag",
        "swf:tagList.member.0",
        "swf:tagList.member.1",
        "swf:tagList.member.2",
        "swf:tagList.member.3",
        "swf:tagList.member.4",
        "swf:taskList.name",
        "swf:typeFilter.name",
        "swf:typeFilter.version",
        "swf:version",
        "swf:workflowType.name",
        "swf:workflowType.version"
      ]
    },
    "Amazon SimpleDB": {
      "ARNFormat": "arn:aws:sdb:\u003cregion\u003e:\u003caccount_ID\u003e:domain/\u003cdomain_name\u003e",
      "ARNRegex": "^arn:aws:sdb:.+",
      "Actions": [
        "BatchDeleteAttributes",
        "BatchPutAttributes",
        "CreateDomain",
        "DeleteAttributes",
        "DeleteDomain",
        "DomainMetadata",
        "GetAttributes",
        "ListDomains",
        "PutAttributes",
        "Select"
      ],
      "HasResource": true,
      "StringPrefix": "sdb"
    },
    "Amazon Storage Gateway": {
      "ARNFormat": "arn:aws:storagegateway:us-east-1:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceName\u003e",
      "ARNRegex": "^arn:aws:storagegateway:.+",
      "Actions": [
        "ActivateGateway",
        "AddCache",
        "AddTagsToResource",
        "AddUploadBuffer",
        "AddWorkingStorage",
        "CancelArchival",
        "CancelRetrieval",
        "CreateCachediSCSIVolume",
        "CreateNFSFileShare",
        "CreateSnapshot",
        "CreateSnapshotFromVolumeRecoveryPoint",
        "CreateStorediSCSIVolume",
        "CreateTapeWithBarcode",
        "CreateTapes",
        "DeleteBandwidthRateLimit",
        "DeleteChapCredentials",
        "DeleteFileShare",
        "DeleteGateway",
        "DeleteSnapshotSchedule",
        "DeleteTape",
        "DeleteTapeArchive",
        "DeleteVolume",
        "DescribeBandwidthRateLimit",
        "DescribeCache",
        "DescribeCachediSCSIVolumes",
        "DescribeChapCredentials",
        "DescribeGatewayInformation",
        "DescribeMaintenanceStartTime",
        "DescribeNFSFileShares",
        "DescribeSnapshotSchedule",
        "DescribeStorediSCSIVolumes",
        "DescribeTapeArchives",
        "DescribeTapeRecoveryPoints",
        "DescribeTapes",
        "DescribeUploadBuffer",
        "DescribeVTLDevices",
        "DescribeWorkingStorage",
        "DisableGateway",
        "ListFileShares",
        "ListGateways",
        "ListLocalDisks",
        "ListTagsForResource",
        "ListTapes",
        "ListVolumeInitiators",
        "ListVolumeRecoveryPoints",
        "ListVolumes",
        "RefreshCache",
        "RemoveTagsFromResource",
        "ResetCache",
        "RetrieveTapeArchive",
        "RetrieveTapeRecoveryPoint",
        "SetLocalConsolePassword",
        "ShutdownGateway",
        "StartGateway",
        "UpdateBandwidthRateLimit",
        "UpdateChapCredentials",
        "UpdateGatewayInformation",
        "UpdateGatewaySoftwareNow",
        "UpdateMaintenanceStartTime",
        "UpdateNFSFileShare",
        "UpdateSnapshotSchedule",
        "UpdateVTLDeviceType"
      ],
      "HasResource": true,
      "StringPrefix": "storagegateway"
    },
    "Amazon Sumerian": {
      "ARNFormat": "arn:aws:sumerian:\u003cregion\u003e:\u003caccount-id\u003e:\u003cresource-type\u003e/\u003cresource_name\u003e",
      "ARNRegex": "^arn:aws:sumerian:.+:.+:.+",
      "Actions": [
        "Login"
      ],
      "HasResource": false,
      "StringPrefix": "sumerian"
    },
    "Amazon Transcribe": {
      "ARNFormat": "arn:${Partition}:transcribe:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:transcribe:.+:.+:.+",
      "Actions": [
        "GetTranscriptionJob",
        "ListTranscriptionJobs",
        "StartTranscriptionJob"
      ],
      "HasResource": false,
      "StringPrefix": "transcribe"
    },
    "Amazon Translate": {
      "ARNFormat": "arn:${Partition}:translate:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:translate:.+:.+:.+",
      "Actions": [
        "TranslateText"
      ],
      "HasResource": false,
      "StringPrefix": "translate"
    },
    "Amazon WorkDocs": {
      "Actions": [
        "AbortDocumentVersionUpload",
        "ActivateUser",
        "AddResourcePermissions",
        "AddUserToGroup",
        "CheckAlias",
        "CreateFolder",
        "CreateInstance",
        "CreateNotificationSubscription",
        "CreateUser",
        "DeactivateUser",
        "DeleteDocument",
        "DeleteFolder",
        "DeleteFolderContents",
        "DeleteInstance",
        "DeleteNotificationSubscription",
        "DeleteUser",
        "DeregisterDirectory",
        "DescribeAvailableDirectories",
        "DescribeDocumentVersions",
        "DescribeFolderContents",
        "DescribeInstances",
        "DescribeNotificationSubscriptions",
        "DescribeResourcePermissions",
        "DescribeUsers",
        "GetDocument",
        "GetDocumentPath",
        "GetDocumentVersion",
        "GetFolder",
        "GetFolderPath",
        "InitiateDocumentVersionUpload",
        "RegisterDirectory",
        "RemoveAllResourcePermissions",
        "RemoveResourcePermission",
        "RemoveUserFromGroup",
        "UpdateDocument",
        "UpdateDocumentVersion",
        "UpdateFolder",
        "UpdateInstanceAlias",
        "UpdateUser"
      ],
      "HasResource": false,
      "StringPrefix": "workdocs"
    },
    "Amazon WorkMail": {
      "Actions": [
        "AddMembersToGroup",
        "CreateGroup",
        "CreateMailDomain",
        "CreateMailUser",
        "CreateOrganization",
        "CreateResource",
        "DeleteMailDomain",
        "DeleteMobileDevice",
        "DeleteOrganization",
        "DescribeDirectories",
        "DescribeKmsKeys",
        "DescribeMailDomains",
        "DescribeMailGroups",
        "DescribeMailUsers",
        "DescribeOrganizations",
        "DisableMailGroups",
        "DisableMailUsers",
        "EnableMailDomain",
        "EnableMailGroups",
        "EnableMailUsers",
        "GetMailDomainDetails",
        "GetMailGroupDetails",
        "GetMailUserDetails",
        "GetMobileDeviceDetails",
        "GetMobileDevicesForUser",
        "GetMobilePolicyDetails",
        "ListMembersInMailGroup",
        "RemoveMembersFromGroup",
        "ResetUserPassword",
        "SearchMembers",
        "SetAdmin",
        "SetDefaultMailDomain",
        "SetMailGroupDetails",
        "SetMailUserDetails",
        "SetMobilePolicyDetails",
        "WipeMobileDevice"
      ],
      "HasResource": false,
      "StringPrefix": "workmail"
    },
    "Amazon WorkSpaces": {
      "ARNFormat": "arn:aws:workspaces:*:*",
      "ARNRegex": "arn:aws:workspaces:*",
      "Actions": [
        "CreateTags",
        "CreateWorkspaces",
        "DeleteTags",
        "DescribeTags",
        "DescribeWorkspaceBundles",
        "DescribeWorkspaceDirectories",
        "DescribeWorkspaces",
        "DescribeWorkspacesConnectionStatus",
        "ModifyWorkspaceProperties",
        "RebootWorkspaces",
        "RebuildWorkspaces",
        "StartWorkspaces",
        "StopWorkspaces",
        "TerminateWorkspaces"
      ],
      "HasResource": true,
      "StringPrefix": "workspaces"
    },
    "Amazon WorkSpaces Application Manager": {
      "Actions": [
        "AuthenticatePackager"
      ],
      "HasResource": false,
      "StringPrefix": "wam"
    },
    "Application Auto Scaling": {
      "Actions": [
        "DeleteScalingPolicy",
        "DeleteScheduledAction",
        "DeregisterScalableTarget",
        "DescribeScalableTargets",
        "DescribeScalingActivities",
        "DescribeScalingPolicies",
        "DescribeScheduledActions",
        "PutScalingPolicy",
        "PutScheduledAction",
        "RegisterScalableTarget"
      ],
      "HasResource": false,
      "StringPrefix": "application-autoscaling"
    },
    "Application Discovery": {
      "Actions": [
        "AssociateConfigurationItemsToApplication",
        "CreateApplication",
        "CreateTags",
        "DeleteApplications",
        "DeleteTags",
        "DescribeAgents",
        "DescribeConfigurations",
        "DescribeExportConfigurations",
        "DescribeTags",
        "DisassociateConfigurationItemsFromApplication",
        "ExportConfigurations",
        "GetDiscoverySummary",
        "ListConfigurations",
        "ListServerNeighbors",
        "StartDataCollectionByAgentIds",
        "StartExportTask",
        "StopDataCollectionByAgentIds",
        "UpdateApplication"
      ],
      "HasResource": false,
      "StringPrefix": "discovery"
    },
    "Auto Scaling": {
      "ARNFormat": "arn:${Partition}:autoscaling:\u003cregion\u003e:\u003caccount\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:${Partition}:autoscaling:.+:.+:.+",
      "Actions": [
        "AttachInstances",
        "AttachLoadBalancerTargetGroups",
        "AttachLoadBalancers",
        "CompleteLifecycleAction",
        "CreateAutoScalingGroup",
        "CreateLaunchConfiguration",
        "CreateOrUpdateTags",
        "DeleteAutoScalingGroup",
        "DeleteLaunchConfiguration",
        "DeleteLifecycleHook",
        "DeleteNotificationConfiguration",
        "DeletePolicy",
        "DeleteScheduledAction",
        "DeleteTags",
        "DescribeAccountLimits",
        "DescribeAdjustmentTypes",
        "DescribeAutoScalingGroups",
        "DescribeAutoScalingInstances",
        "DescribeAutoScalingNotificationTypes",
        "DescribeLaunchConfigurations",
        "DescribeLifecycleHookTypes",
        "DescribeLifecycleHooks",
        "DescribeLoadBalancerTargetGroups",
        "DescribeLoadBalancers",
        "DescribeMetricCollectionTypes",
        "DescribeNotificationConfigurations",
        "DescribePolicies",
        "DescribeScalingActivities",
        "DescribeScalingProcessTypes",
        "DescribeScheduledActions",
        "DescribeTags",
        "DescribeTerminationPolicyTypes",
        "DetachInstances",
        "DetachLoadBalancerTargetGroups",
        "DetachLoadBalancers",
        "DisableMetricsCollection",
        "EnableMetricsCollection",
        "EnterStandby",
        "ExecutePolicy",
        "ExitStandby",
        "PutLifecycleHook",
        "PutNotificationConfiguration",
        "PutScalingPolicy",
        "PutScheduledUpdateGroupAction",
        "RecordLifecycleActionHeartbeat",
        "ResumeProcesses",
        "SetDesiredCapacity",
        "SetInstanceHealth",
        "SetInstanceProtection",
        "SuspendProcesses",
        "TerminateInstanceInAutoScalingGroup",
        "UpdateAutoScalingGroup"
      ],
      "HasResource": true,
      "StringPrefix": "autoscaling",
      "conditionKeys": [
        "autoscaling:ImageId",
        "autoscaling:InstanceType",
        "autoscaling:LaunchConfigurationName",
        "autoscaling:LoadBalancerNames",
        "autoscaling:MaxSize",
        "autoscaling:MinSize",
        "autoscaling:ResourceTag/",
        "autoscaling:SpotPrice",
        "autoscaling:TargetGroupARNs",
        "autoscaling:VPCZoneIdentifiers",
        "aws:RequestTag/"
      ]
    },
    "Auto Scaling Plans": {
      "Actions": [
        "CreateScalingPlan",
        "DeleteScalingPlan",
        "DescribeScalingPlanResources",
        "DescribeScalingPlans"
      ],
      "HasResource": false,
      "StringPrefix": "autoscaling-plans"
    },
    "Data Pipeline": {
      "Actions": [
        "ActivatePipeline",
        "AddTags",
        "CreatePipeline",
        "DeactivatePipeline",
        "DeletePipeline",
        "DescribeObjects",
        "DescribePipelines",
        "EvaluateExpression",
        "GetAccountLimits",
        "GetPipelineDefinition",
        "ListPipelines",
        "PollForTask",
        "PutAccountLimits",
        "PutPipelineDefinition",
        "QueryObjects",
        "RemoveTags",
        "ReportTaskProgress",
        "ReportTaskRunnerHeartbeat",
        "SetStatus",
        "SetTaskStatus",
        "ValidatePipelineDefinition"
      ],
      "HasResource": false,
      "StringPrefix": "datapipeline",
      "conditionKeys": [
        "datapipeline:PipelineCreator",
        "datapipeline:Tag",
        "datapipeline:workerGroup"
      ]
    },
    "Elastic Load Balancing": {
      "ARNFormat": "arn:aws:elasticloadbalancing:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceid\u003e",
      "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
      "Actions": [
        "AddTags",
        "ApplySecurityGroupsToLoadBalancer",
        "AttachLoadBalancerToSubnets",
        "ConfigureHealthCheck",
        "CreateAppCookieStickinessPolicy",
        "CreateLBCookieStickinessPolicy",
        "CreateLoadBalancer",
        "CreateLoadBalancerListeners",
        "CreateLoadBalancerPolicy",
        "DeleteLoadBalancer",
        "DeleteLoadBalancerListeners",
        "DeleteLoadBalancerPolicy",
        "DeregisterInstancesFromLoadBalancer",
        "DescribeInstanceHealth",
        "DescribeLoadBalancerAttributes",
        "DescribeLoadBalancerPolicies",
        "DescribeLoadBalancerPolicyTypes",
        "DescribeLoadBalancers",
        "DescribeTags",
        "DetachLoadBalancerFromSubnets",
        "DisableAvailabilityZonesForLoadBalancer",
        "EnableAvailabilityZonesForLoadBalancer",
        "ModifyLoadBalancerAttributes",
        "RegisterInstancesWithLoadBalancer",
        "RemoveTags",
        "SetLoadBalancerListenerSSLCertificate",
        "SetLoadBalancerPoliciesForBackendServer",
        "SetLoadBalancerPoliciesOfListener"
      ],
      "HasResource": true,
      "StringPrefix": "elasticloadbalancing"
    },
    "Elastic Load Balancing V2": {
      "ARNFormat": "arn:aws:elasticloadbalancing:\u003cregion\u003e:\u003caccount\u003e:\u003cresourceType\u003e/\u003cresourceid\u003e",
      "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
      "Actions": [
        "AddListenerCertificates",
        "AddTags",
        "CreateListener",
        "CreateLoadBalancer",
        "CreateRule",
        "CreateTargetGroup",
        "DeleteListener",
        "DeleteLoadBalancer",
        "DeleteRule",
        "DeleteTargetGroup",
        "DeregisterTargets",
        "DescribeAccountLimits",
        "DescribeListenerCertificates",
        "DescribeListeners",
        "DescribeLoadBalancerAttributes",
        "DescribeLoadBalancers",
        "DescribeRules",
        "DescribeSSLPolicies",
        "DescribeTags",
        "DescribeTargetGroupAttributes",
        "DescribeTargetGroups",
        "DescribeTargetHealth",
        "ModifyListener",
        "ModifyLoadBalancerAttributes",
        "ModifyRule",
        "ModifyTargetGroup",
        "ModifyTargetGroupAttributes",
        "RegisterTargets",
        "RemoveListenerCertificates",
        "RemoveTags",
        "SetIpAddressType",
        "SetRulePriorities",
        "SetSecurityGroups",
        "SetSubnets",
        "SetWebAcl"
      ],
      "HasResource": true,
      "StringPrefix": "elasticloadbalancing",
      "conditionKeys": [
        "aws:RequestTag/tag-key",
        "aws:TagKeys",
        "elasticloadbalancing:ResourceTag/",
        "elasticloadbalancing:ResourceTag/tag-key"
      ]
    },
    "Identity And Access Management": {
      "ARNFormat": "arn:aws:iam::\u003cnamespace\u003e:\u003crelative-id\u003e",
      "ARNRegex": "^arn:aws:iam::.+",
      "Actions": [
        "AddClientIDToOpenIDConnectProvider",
        "AddRoleToInstanceProfile",
        "AddUserToGroup",
        "AttachGroupPolicy",
        "AttachRolePolicy",
        "AttachUserPolicy",
        "ChangePassword",
        "CreateAccessKey",
        "CreateAccountAlias",
        "CreateGroup",
        "CreateInstanceProfile",
        "CreateLoginProfile",
        "CreateOpenIDConnectProvider",
        "CreatePolicy",
        "CreatePolicyVersion",
        "CreateRole",
        "CreateSAMLProvider",
        "CreateServiceLinkedRole",
        "CreateServiceSpecificCredential",
        "CreateUser",
        "CreateVirtualMFADevice",
        "DeactivateMFADevice",
        "DeleteAccessKey",
        "DeleteAccountAlias",
        "DeleteAccountPasswordPolicy",
        "DeleteGroup",
        "DeleteGroupPolicy",
        "DeleteInstanceProfile",
        "DeleteLoginProfile",
        "DeleteOpenIDConnectProvider",
        "DeletePolicy",
        "DeletePolicyVersion",
        "DeleteRole",
        "DeleteRolePermissionsBoundary",
        "DeleteRolePolicy",
        "DeleteSAMLProvider",
        "DeleteSSHPublicKey",
        "DeleteServerCertificate",
        "DeleteServiceLinkedRole",
        "DeleteServiceSpecificCredential",
        "DeleteSigningCertificate",
        "DeleteUser",
        "DeleteUserPermissionsBoundary",
        "DeleteUserPolicy",
        "DeleteVirtualMFADevice",
        "DetachGroupPolicy",
        "DetachRolePolicy",
        "DetachUserPolicy",
        "EnableMFADevice",
        "GenerateCredentialReport",
        "GenerateServiceLastAccessedDetails",
        "GetAccessKeyLastUsed",
        "GetAccountAuthorizationDetails",
        "GetAccountPasswordPolicy",
        "GetAccountSummary",
        "GetContextKeysForCustomPolicy",
        "GetContextKeysForPrincipalPolicy",
        "GetCredentialReport",
        "GetGroup",
        "GetGroupPolicy",
        "GetInstanceProfile",
        "GetLoginProfile",
        "GetOpenIDConnectProvider",
        "GetPolicy",
        "GetPolicyVersion",
        "GetRole",
        "GetRolePolicy",
        "GetSAMLProvider",
        "GetSSHPublicKey",
        "GetServerCertificate",
        "GetServiceLastAccessedDetails",
        "GetServiceLastAccessedDetailsWithEntities",
        "GetServiceLinkedRoleDeletionStatus",
        "GetUser",
        "GetUserPolicy",
        "ListAccessKeys",
        "ListAccountAliases",
        "ListAttachedGroupPolicies",
        "ListAttachedRolePolicies",
        "ListAttachedUserPolicies",
        "ListEntitiesForPolicy",
        "ListGroupPolicies",
        "ListGroups",
        "ListGroupsForUser",
        "ListInstanceProfiles",
        "ListInstanceProfilesForRole",
        "ListMFADevices",
        "ListOpenIDConnectProviders",
        "ListPolicies",
        "ListPoliciesGrantingServiceAccess",
        "ListPolicyVersions",
        "ListRolePolicies",
        "ListRoles",
        "ListSAMLProviders",
        "ListSSHPublicKeys",
        "ListServerCertificates",
        "ListServiceSpecificCredentials",
        "ListSigningCertificates",
        "ListUserPolicies",
        "ListUsers",
        "ListVirtualMFADevices",
        "PassRole",
        "PutGroupPolicy",
        "PutRolePermissionsBoundary",
        "PutRolePolicy",
        "PutUserPermissionsBoundary",
        "PutUserPolicy",
        "RemoveClientIDFromOpenIDConnectProvider",
        "RemoveRoleFromInstanceProfile",
        "RemoveUserFromGroup",
        "ResetServiceSpecificCredential",
        "ResyncMFADevice",
        "SetDefaultPolicyVersion",
        "SimulateCustomPolicy",
        "SimulatePrincipalPolicy",
        "UpdateAccessKey",
        "UpdateAccountPasswordPolicy",
        "UpdateAssumeRolePolicy",
        "UpdateGroup",
        "UpdateLoginProfile",
        "UpdateOpenIDConnectProviderThumbprint",
        "UpdateRole",
        "UpdateRoleDescription",
        "UpdateSAMLProvider",
        "UpdateSSHPublicKey",
        "UpdateServerCertificate",
        "UpdateServiceSpecificCredential",
        "UpdateSigningCertificate",
        "UpdateUser",
        "UploadSSHPublicKey",
        "UploadServerCertificate",
        "UploadSigningCertificate"
      ],
      "HasResource": true,
      "StringPrefix": "iam",
      "conditionKeys": [
        "iam:AWSServiceName",
        "iam:PassedToService",
        "iam:PermissionsBoundary",
        "iam:PolicyARN"
      ]
    },
    "Manage Amazon API Gateway": {
      "ARNFormat": "arn:aws:apigateway:\u003cregion\u003e::\u003capi_gateway_resource_path\u003e",
      "ARNRegex": "^arn:aws:apigateway:.+",
      "Actions": [
        "DELETE",
        "GET",
        "HEAD",
        "OPTIONS",
        "PATCH",
        "POST",
        "PUT"
      ],
      "HasResource": true,
      "StringPrefix": "apigateway"
    },
    "Single Sign-On": {
      "ARNFormat": "arn:${Partition}:sso:${Region}:${Account}:\u003crelative-id\u003e",
      "ARNRegex": "^arn:${Partition}:sso:${Region}:.+",
      "Actions": [
        "AssociateDirectory",
        "AssociateProfile",
        "CreateApplicationInstance",
        "CreateApplicationInstanceCertificate",
        "CreatePermissionSet",
        "CreateProfile",
        "CreateTrust",
        "DeleteApplicationInstance",
        "DeleteApplicationInstanceCertificate",
        "DeletePermissionSet",
        "DeletePermissionsPolicy",
        "DeleteProfile",
        "DescribePermissionsPolicies",
        "DisassociateDirectory",
        "DisassociateProfile",
        "GetApplicationInstance",
        "GetApplicationTemplate",
        "GetPermissionSet",
        "GetPermissionsPolicy",
        "GetProfile",
        "GetSSOStatus",
        "GetTrust",
        "ImportApplicationInstanceServiceProviderMetadata",
        "ListApplicationInstanceCertificates",
        "ListApplicationInstances",
        "ListApplicationTemplates",
        "ListApplications",
        "ListDirectoryAssociations",
        "ListPermissionSets",
        "ListProfileAssociations",
        "ListProfiles",
        "PutPermissionsPolicy",
        "SearchGroups",
        "SearchUsers",
        "StartSSO",
        "UpdateApplicationInstanceActiveCertificate",
        "UpdateApplicationInstanceDisplayData",
        "UpdateApplicationInstanceResponseConfiguration",
        "UpdateApplicationInstanceResponseSchemaConfiguration",
        "UpdateApplicationInstanceSecurityConfiguration",
        "UpdateApplicationInstanceServiceProviderConfiguration",
        "UpdateApplicationInstanceStatus",
        "UpdateDirectoryAssociation",
        "UpdateProfile",
        "UpdateTrust"
      ],
      "HasResource": false,
      "StringPrefix": "sso"
    }
  }
}
